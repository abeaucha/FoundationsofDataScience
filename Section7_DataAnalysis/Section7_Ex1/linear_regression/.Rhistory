baseball <- read_csv("baseball.csv")
str(baseball)
library(readr)
baseball <- read_csv("baseball.csv")
str(baseball)
moneyball=subset(baseball, Year <2002)
str(moneyball)
moneyball$RD = moneyball$RS - moneyball$RA
WinsReg <- lm(W ~ RD, data=moneyball)
summary(WinsReg)
str(moneyball)
RunsReg <- lm(RS ~ OBP + SLG + BA, data=moneyball)
summary(RunsReg)
summary(RunsReg)
RunsReg <- lm(RS ~ OBP + SLG, data=moneyball)
summary(RunsReg)
NBA <- read_csv("NBA_train.csv")
str(NBA)
table(NBA$W, NBA$Playoffs)
NBA$PTSdiff = NBA$PTS - NBA$oppPTS
plot(NBA$PTSdiff, NBA$W)
WinsReg <- lm(W ~ PTSdiff, data=NBA)
summary(WinsReg)
PointsReg <- lm(PTS ~ X2PA + X3PA + FTA + AST + ORB + DRB + TOV + STL + BLK, data=NBA)
summary(PointsReg)
PointsReg <- lm(PTS ~ X2PA + X3PA + FTA + AST + ORB + DRB + TOV + STL + BLK, data=NBA)
PointsReg <- lm(PTS ~ 2PA + 3PA + FTA + AST + ORB + DRB + TOV + STL + BLK, data=NBA)
library(readr)
NBA <- read.csv("NBA_train.csv")
str(NBA)
table(NBA$W, NBA$Playoffs)
NBA$PTSdiff = NBA$PTS - NBA$oppPTS
plot(NBA$PTSdiff, NBA$W)
WinsReg <- lm(W ~ PTSdiff, data=NBA)
summary(WinsReg)
PointsReg <- lm(PTS ~ X2PA + X3PA + FTA + AST + ORB + DRB + TOV + STL + BLK, data=NBA)
summary(PointsReg)
PointsReg$residuals
SSE = sum(PointsReg$residuals^2)
SSE
(SSE = sum(PointsReg$residuals^2))
RMSE = sqrt(SSE/nrow(NBA))
(RMSE = sqrt(SSE/nrow(NBA)))
mean(NBA$PTS)
PointsReg2 <- lm(PTS ~ X2PA + X3PA + FTA + AST + ORB + DRB + STL + BLK, data=NBA)
summary(PointsReg2)
PointsReg3 <- lm(PTS ~ X2PA + X3PA + FTA + AST + ORB + STL + BLK, data=NBA)
summary(PointsReg3)
PointsReg4 <- lm(PTS ~ X2PA + X3PA + FTA + AST + ORB + STL, data=NBA)
summary(PointsReg4)
SSE
RMSE
(SSE_4 = sum(PointsReg4$residuals^2))
RMSE = sqrt(SSE_4/nrow(NBA))
(RMSE = sqrt(SSE_4/nrow(NBA)))
NBA_test <- read.csv("NBA_test.csv")
PointsPredictions <- predict(PointsReg4, newdata = NBA_test)
SSE = sum((PointsPredictions - NBA_test$PTS)^2)
SST = sum((mean(NBA$PTS-NBA_test$PTS))^2)
R2 = 1 - SSE/SST
SST = sum((mean(NBA$PTS-NBA_test$PTS))^2)
SSE = sum((PointsPredictions - NBA_test$PTS)^2)
SST = sum((mean(NBA$PTS)-NBA_test$PTS))^2)
SSE = sum((PointsPredictions - NBA_test$PTS)^2)
SST = sum(((mean(NBA$PTS)-NBA_test$PTS))^2)
R2 = 1 - SSE/SST
(R2 = 1 - SSE/SST)
(RMSE = sqrt(SSE/nrow(NBA_test)))
install.packages("rmarkdown")
library(readr)
quality <- read_csv("quality.csv")
str(quality)
table(quality$PoorCare)
98/131
install.packages("caTools")
library(caTools)
library(caTools)
set.seed(88) #This is the seed used in the video
split = sample.split(quality$PoorCare, SplitRatio=0.75) #Puts 75% of the data in the training set.
split
qualityTrain = subset(quality, split == TRUE)
nrow(qualityTrain)
nrow(qualityTest)
qualityTrain <- subset(quality, split == TRUE)
qualityTest <- subset(quality, split==FALSE)
nrow(qualityTrain)
nrow(qualityTest)
QualityLog <- glm(PoorCare ~ OfficeVisists + Narcotics, data=qualityTrain, family=binomial)
QualityLog <- glm(PoorCare ~ OfficeVisits + Narcotics, data=qualityTrain, family=binomial)
summary(QualityLog)
predictTrain = predict(QualityLog, type="response")
summary(predictTrain)
tapply(predictTrain, qualityTrain$PoorCare, mean)
tapply(predictTrain, qualityTrain$PoorCare, mean)
table(qualityTrain$PoorCare, predictTrain > 0.5)
10/25
70/74
table(qualityTrain$PoorCare, predictTrain > 0.5)
table(qualityTrain$PoorCare, predictTrain > 0.7)
table(qualityTrain$PoorCare, predictTrain > 0.2)
install.packages("ROCR")
library(ROCR)
ROCRpred <- prediction(predictTrain, qualityTrain$PoorCare)
plot(ROCRperf)
ROCRperf <- performance(ROCRpred, "tpr", "fpr") #Arguments for x and y axes. tpr=true positive rate. fpf=false positive rate
plot(ROCRperf)
plot(ROCRperf, colorize=TRUE)
plot(ROCRperf, colorize=TRUE, print.cutoffs.at=seq(0,1,0.1), text.adj=c(-0.2,1.7))
polling <- read.csv("PollingData.csv")
str(polling)
table(polling$Year)
summary(polling)
install.packages("mice")
library(mice)
simple <- polling[c("Rasmussen", "SurveyUSA", "PropR", "DiffCount")]
summary(simple)
imputed <- complete(mice(simple))
summary(simple)
polling$Rasmussen <- imputed$Rasmussen
polling$SurveyUSA <- imputed$SurveyUSA
summary(polling)
Train <- subset(polling, Year == 2004 | Year == 2008)
Test <- subset(polling, Year == 2012)
table(Train$Republican)
sign(polling$Rasmussen)
table(sign(Train$Rasmussen))
table(Train$Republican, sign(Train$Rasmussen))
cor(Train)
cor(Train[c("Rasmussen", "SurveyUSA", "PropR", "DiffCount", "Republican")])
mod1 <- glm(Republican ~ PropR, data=Train, family="binomial")
summary(mod1)
pred1 <- predict(mod1, type="response")
table(Train$Republican, pred1 >=0.5)
mod2 <- glm(Republican~SurveyUSA+DiffCount, data=Train, family="binomial")
pred2 <- predict(mod2, type="response")
table(Train$Republican, pred2 >= 0.5)
summary(mod2)
table(Test$Republican, sign(Test$Rasmussen))
TestPrediction = predict(mod2, newdata=Test, type="response")
table(Test$Republican, TestPrediction >= 0.5)
subset(Test, TestPrediction >= 0.5 & Republican == 0)
movies = read.table("movieLens.text", header=FALSE, sep="|")
movies = read.table("movieLens.txt", header=FALSE, sep="|")
movies = read.table("movieLens.txt", header=FALSE, sep="|", quote="\"")
str(movies)
str(movies)
colnames(movies) = c("ID", "Title", "ReleaseDate", "VideoReleaseDate", "IMDB", "Unknown", "Action", "Adventure", "Animation", "Childrens", "Comedy", "Crime", "Documentary", "Drama", "Fantasy", "FilmNoir", "Horror", "Musical", "Mystery", "Romance", "SciFi", "Thriller", "War", "Western")
str(movies)
head(movies)
View(movies)
movies$ID = NULL
movies$VideoReleaseDate = NULL
movies$IMDB = NULL
movies <- unique(movies)
str(movies)
distance = dist(movies[2:20], method="euclidean")
movies = read.table("movieLens.txt", header=FALSE, sep="|", quote="\"")
str(movies)
colnames(movies) <- c("ID", "Title", "ReleaseDate", "VideoReleaseDate", "IMDB", "Unknown", "Action", "Adventure", "Animation", "Childrens", "Comedy", "Crime", "Documentary", "Drama", "Fantasy", "FilmNoir", "Horror", "Musical", "Mystery", "Romance", "SciFi", "Thriller", "War", "Western")
str(movies)
movies$ID <- NULL
movies$ReleaseDate <- NULL
movies$VideoReleaseDate <- NULL
movies$IMDB <- NULL
movies <- unique(movies)
str(movies)
distance = dist(movies[2:20], method="euclidean")
clusterMovies = hclust(distances, method="ward")
distances = dist(movies[2:20], method="euclidean")
clusterMovies = hclust(distances, method="ward.D2")
plot(clusterMovies)
distances = dist(movies[2:20], method="euclidean")
clusterMovies = hclust(distances, method="ward.D")
plot(clusterMovies)
clusterGroups <- cutree(clusterMovies, k = 10) #Selected 10 clusters
tapply(movies$Action, clusterGroups, mean)
tapply(movies$Romance, clusterGroups, mean)
subset(movies, Title == "Men in Black (1997)")
clusterGroups[257]
cluster2 <- subset(movies, clusterGroups==2)
cluster2$Title[1:10]
KMC <- kmeans(healthyVector, centers=k, iter.max=1000)
healthyVector <- as.vector(healthyMatrix)
set.seed(1) #To get same results as video
k=5
healthyVector <- as.vector(healthyMatrix)
set.seed(1) #To get same results as video
healthyVector <- as.vector(healthyMatrix)
healthyVector <- as.vector(healthyMatrix)
healthy <- read.csv("healthy.csv", header=FALSE)
healthyMatrix <- as.matrix(healthy)
str(healthyMatrix)
image(healthyMatrix, axes=FALSE, col=grey(seq(0,1,length=256)))
k=5
healthyVector <- as.vector(healthyMatrix)
set.seed(1) #To get same results as video
KMC <- kmeans(healthyVector, centers=k, iter.max=1000)
str(KMC)
healthyClusters <- KMC$cluster
KMC$centers[2]
KMC$centers
dim(healthyClusters) <- c(nrow(healthyMatrix), ncol(healthyMatrix))
image(healthyClusters, axes=FALSE, col=rainbow(k))
tumor <- read.csv("tumor.csv", header=FALSE) %>% as.matrix() %>% as.vector()
tumor <- read.csv("tumor.csv", header=FALSE)
tumor %>% as.matrix()
library(dplyr)
suppressMessages(library(dplyr))
tumor <- read.csv("tumor.csv", header=FALSE) %>% as.matrix() %>% as.vector()
install.packages("flexclust")
library(flexclust)
KMC.kcca <- as.kcca(KMC, healthyVector)
suppressMessages(library(dplyr))
tumorVector <- read.csv("tumor.csv", header=FALSE) %>% as.matrix() %>% as.vector()
library(flexclust)
KMC.kcca <- as.kcca(KMC, healthyVector) #Takes a while to run
KMC.kcca <- as.kcca(KMC, healthyVector) #Takes a while to run
tumorClusters <- predict(KMC.kcca, newdata=tumorVector)
tumorClusters <- predict(KMC.kcca, newdata=tumorVector)
image(tumorClusters, axes=FALSE, col=rainbow(k))
suppressMessages(library(dplyr))
tumorMatrix <- read.csv("tumor.csv", header=FALSE) %>% as.matrix()
tumorVector <- as.vector(tumorMatrix)
library(flexclust)
tumorClusters <- predict(KMC.kcca, newdata=tumorVector)
dim(tumorClusters) <- c(nrow(tumorMatrix), ncol(tumorMatrix))
image(tumorClusters, axes=FALSE, col=rainbow(k))
tumor <- read.csv("tumor.csv", header=FALSE)
tumorMatrix <- as.matrix(tumor)
tumorVector <- as.vector(tumorMatrix)
library(flexclust)
KMC.kcca <- as.kcca(KMC, healthyVector) #Takes a while to run
tumorClusters <- predict(KMC.kcca, newdata=tumorVector)
dim(tumorClusters) <- c(nrow(tumorMatrix), ncol(tumorMatrix))
image(tumorClusters, axes=FALSE, col=rainbow(k))
image(tumorMatrix, axes=FALSE, col=grey(seq(0,1,256)))
image(tumorMatrix, axes=FALSE, col=grey(seq(0,1,length=256)))
getwd()
setwd("/Users/Antoine/Documents/Work/DataScience/Springboard/FoundationsofDataScience/Section7_DataAnalysis/Section7_Ex1/")
getwd() # where am I?
list.files("dataSets") # files in the dataSets folder
states.data <- readRDS("dataSets/states.rds")
setwd("/Users/Antoine/Documents/Work/DataScience/Springboard/FoundationsofDataScience/Section7_DataAnalysis/Section7_Ex1/linear_regression/")
getwd() # where am I?
list.files("dataSets") # files in the dataSets folder
states.data <- readRDS("dataSets/states.rds")
states.info <- data.frame(attributes(states.data)[c("names", "var.labels")])
tail(states.info, 8)
head(states.data)
attributes(states.data)
attributes(states.data)[c("names", "var.labels")]
tail(states.info, 8)
sts.ex.sat <- subset(states.data, select = c("expense", "csat"))
summary(sts.ex.sat)
cor(sts.ex.sat)
plot(sts.ex.sat)
