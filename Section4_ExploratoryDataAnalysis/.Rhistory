d <- rep(NA,N) #Create an empty vector (allocate memory)
c <- a*b
d <- rep(NA,N) #Create an empty vector (allocate memory)
for(i in 1:N){
d[i] = a[i]*b[i]
}
N<-1000000
a<-rnorm(N)
b<-rnorm(N)
c <- a*b
d <- rep(NA,N) #Create an empty vector (allocate memory)
for(i in 1:N){
d[i] = a[i]*b[i]
}
?t.test
??test
??test
?test
cor.test(trees$Girth,trees$Volume)
A<-array(c(97,98,78,80,81,84,85,85,86,94,100,102,103,104))
B<-array(c(76,87,89,90,94,96,98,99,100,106,109,112,113,105))
t.test(A,B,var.equal=T)
sampleN1<-rnorm(100,mean=50,sd=1)
sampleN2<-rnorm(100,mean=50,sd=10)
sampleN3<-rnorm(100,mean=100,sd=5)
sampleN4<-rnorm(100,mean=100,sd=10)
sampleN5<-rnorm(200,mean=100,sd=5)
sampleP1<-rpois(100,lambda=50)
sampleP2<-rpois(100,lambda=100)
t.test(sampleN1,sampleN2)
?t.test
x = c(0.593,0.142,0.329,0.691,0.231,0.793,0.519,0.392,0.418)
t.test(x,alternative="greater",mu=0.3)
ctrl_grp <- c(91,87,99,77,88,91)
treat_grp <- c(101,110,103,93,99,104)
t.test(ctrl_grp,treat_grp, alternative="less",var.equal=TRUE)
t.test(ctrl_grp,treat_grp,alternative="less")
reg_gas<-c(16,20,21,22,23,22,27,25,27,28)
prem_gas<-c(19,22,24,24,25,25,26,26,28,32)
t.test(prem_gas,reg_gas,alternative="greater",paired=TRUE) #The paired option has to be set to T, because same car?
t.test(prem_gas,reg_gas,paired=TRUE)
ltr_exp <- c(29,31,17,17,16)
ltr_obs <- c(100,110,80,55,14)
ltr_exp_probs=ltr_exp/(29+21+17+17+16)
chisq.test(ltr_obs,p=ltr_exp_probs)
ltr_exp <- c(29,21,17,17,16)
ltr_obs <- c(100,110,80,55,14)
ltr_exp_probs=ltr_exp/(29+21+17+17+16)
chisq.test(ltr_obs,p=ltr_exp_probs)
pain<-c(4,5,4,3,2,4,3,4,4,6,8,4,5,4,6,5,8,6,6,7,6,6,7,5,6,5,5)
pain<-c(4,5,4,3,2,4,3,4,4,6,8,4,5,4,6,5,8,6,6,7,6,6,7,5,6,5,5)
drug <-rep("A",9),rep("B",9),rep("X",9)
treatment<-data.frame(pain,drug)
drug <-c(rep("A",9),rep("B",9),rep("X",9))
pain<-c(4,5,4,3,2,4,3,4,4,6,8,4,5,4,6,5,8,6,6,7,6,6,7,5,6,5,5)
drug <-c(rep("A",9),rep("B",9),rep("X",9))
treatment<-data.frame(pain,drug)
treatment
plot(pain~drug,data=treatment)
results=aov(pain~drug,data=treatment)
summary(results)
pairwise.t.test(pain,drug,p.adjust="bonferroni")
TukeyHSD(results,conf.level = 0.95)
m1 <- lm(Girth~Volume, data=trees)
lev=hat(model.matrix(m1))
m1
model.matrix(m1)
m1 <- lm(Girth~Volume, data=trees)
lev=hat(model.matrix(m1))
plot(lev)
trees[lev>0.15,]
cookDist=cooks.distance(m1)
plot(cookDist,ylab="Cook\'s Distance")
points(31,cookDist[31],col='red')
cleanData=trees[-31]
test = c(1,2,3,4,5)
test[-1]
test
test[-3]
plot(trees$Girth,m1$res)
plot(trees$Girth,m1$res)
par(mfrow=c(1,3))
plot(trees$Girth,m1$res)
plot(trees$Volume,m1$res)
plot(m1$fitted,m1$res)
qqnorm(m1$res)
qqnorm(m1$res)
qqnorm(m1$res)
?qqnorm
qqline(m1$res)
qqnorm(m1$res)
qqline(m1$res)
hist(m1$res)
hist(m1$res[-31])
hist(m1$res)
str(iris)
head(iris)
summary(iris)
levels(iris)
levels(iris$Species)
plot(iris)
plot(iris$Sepal.Length,iris$Sepal.Width,col=iris$Species)
ind <- sample(1:2, nrow(iris),replace=TRUE,prob=c(0.7,0.3))
ind
?sample
trainData<-iris[ind==1,]
testData<-iris[ind==2,]
install.packages(party)
library(party)
install.packages(party)
library(party)
install.packages("party")
library("party")
myFormula <- Species ~ Sepal.Length + Sepal.Width + Petal.Length + Petal.Width
myFormula
typeof(myFormula)
myFormula <- Species ~ Sepal.Length + Sepal.Width + Petal.Length + Petal.Width
iris.tree <- ctree(myFormula,data=trainData)
table(predict(iris.tree),trainData$Species)
plot(iris.trees)
plot(iris.tree)
testPred <- predict(iris.tree,newdata=testData)
table(testPred,testData$Species)
q()
x <- 1:5
x
typeof(x)
is.vector(x)
"Hello World!"
c1 <- 1:5
c2 <- -1:-5
D <- cbind(c1,c2)
D
cor.test(trees$Girth,trees$Volume)
reg_gas<-c(16,20,21,22,23,22,27,25,27,28)
prem_gas<-c(19,22,24,24,25,25,26,26,28,32)
t.test(prem_gas,reg_gas,alternative="greater",paired=TRUE) #The paired option has to be set to T, because same car?
q()
pwd
get.wd()
wd.get()
wget
install.packages("swirl")
library("swirl")
version
quit
quit()
library("swirl")
install.packages("swirl")
library("swirl")
swirl()
install_course("Regression Models")
install_course("Statistical Inference")
install_course("Exploratory Data Analysis")
info()
nxt()
bye()
swirl()
5+7
bye()
quit()
search()
?search
x <-1
y<-3
x+y
quit()
library("swirl")
swirl()
install_course("Data Analysis")
install_course("Data Analysis")
swirl()
install_course("Data Analysis")
play()
bye()
swirl()
nxt()
play()
nxt()
bye()
swirl()
library("swirl")
swirl()
info()
play()
nxt()
0
bye()
swirl()
quit
exit
exit()
quit()
quit()
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
summary(cars)
library(xts)
install.packages("xts")
install.packages("quantmod")
library(xts)
library(quantmod)
library(zoo)
library(TTR)
library(xts)
library(quantmod)
prices <- getSymbols("GOOG", auto.assign = FALSE)
move <- Cl(last(prices)) - Op(last(prices))
ifelse(move > 0, "BUY", "SELL")
chartSeries(prices, theme = chartTheme("white", bg.col = "white"))
render
?render
library(rmarkdown)
render
clear
library(swirl)
?rm
rm(move)
rm()
rm(list=ls())
swirl()
ls()
?ls
x = 1
ls()
ls
ls()
pwd()
ls()
rm(x)
rm(ls())
swirl()
5+7
x <- 5+7
x
y <- x - 3
y
z <- c(1.1, 9, 3.14)
?c
z
c(z,555)
c(z,555,z)
z*2+100
sqrt(z-1)
my_sqrt<-sqrt(z-1)
my_sqrt
my_div <- z/my_sqrt
my_div
c(1,2,3,4)+c(0,10)
c(1,2,3,4)+c(0,10,100)
z*2+1000
my_div
getwd()
ls()
x<-9
ls()
list.files()
?list.files
args(list.files())
args(list.files
)
play()
getwd()
list.dir()
dir()
nxt()
old.dir<-getwd()
play()
args(dir.create
)
nxt()
dir.create(testdir)
dir.create("testdir")
dir()
nxt()
setwd("testdir")
file.create("mytest.R")
ls()
dir()
file.exists("mytest.R")
file.info("mytest.R")
play()
args(file.rename
)
nxt()
file.rename("mytest.R","mytest2.R")
file.copy("mytest2.R","mytest3.R")
file.path("mytest3.R")
play()
args(file.path)
?args
?file.path
nxt()
file.path("folder1","folder2")
play()
dir()
nxt()
?dir.create
dir.create(file.path("testdir2","testdir3"), recursive = TRUE)
setwd(old.dir)
unlink("testdir",recursive = TRUE)
my_vector<-1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4,5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector
)
my_matrix <- my_vector
?matrix
my_matrix2 <- matrix(1:20, ncol=5, byrow=TRUE)
my_matrix2 <- matrix(1:20, ncol=5, nrow=4)
identical(my_matrix,my_matrix2)
patients<-c("Bill","Gina","Kelly","Sean")
cbind(patients,my_matrix)
my_data<-data.frame(patients, my_matrix)
my_data
class(my_data)
cnames<-c("patient","age","weight","bp","rating","test")
play()
?colnames
colnames(my_data) <- cnames
nxt()
colnames(my_data)<-cnames
my_data
play()
nxt()
ls()
class(plants)
dim(plants)
nrow(plants)
ncol(plants)
object.size(plants)
names(plants)
head(plants)
play()
?head
nxt()
head(plants,n=10)
tail(plants,n=15)
summary(plants)
0
info()
bye()
swirl()
bye()
quit()
swirl()
library("swirl")
swirl()
bye()
bye()
install_course("Getting_and_Cleaning_Data")
swirl()
quit()
install.packages("dplyr")
install.packages("tidyr")
View(diamonds)
library(ggplot2)
install.packages("ggplot2")
library(ggplot2)
head(diamonds)
library(dplyr)
tbl_df(diamonds)
View(diamonds)
?view
?view
?View
diamonds$x %>% mean()
install.packages("devtools")
devtools::install_github("rstudio/EDAWR")
library(EDAWR)
head(storms)
class(storms)
storms
pollution
cases
gather(cases,"year","n",2:4)
library(tidyr)
gather(cases,"year","n",2:4)
case[1,]
cases[1,]
cases[,1]
cases[,2:4]
library(dplyr)
pollution
pollution %>% group_by(city)
pollution %>% group_by(size)
pollution %>% group_by(city) %>% summarise(mean=mean(amount))
install.packages("hflights")
quit()
library(swirl)
swirl()
c(0.5,55,-10,6)
c(0.5,55.,-10.,6.)
num_vect<-c(0.5,55.,-10.,6.)
bye()
quit()
library(swirl)
swirl
swirl()
bye()
library(swirl)
swirl()
0
bye()
swirl()
range(cars$price)
play()
head(cars)
nxt()
range(cars$price)[2]-range(cars)
range(cars$price)[2]-range(cars$price)[1]
var(cars$price)
sd(cars$price)
20
quit()
head(Titanic)
str(Titanic)
Titanic
class(Titanic)
as.data.frame(Titanic)
install.packages("ggplot2")
list(rm=ls())
rm(list=ls())
library(dplyr)
library(readr)
library(ggplot2)
path_to_wd <- file.path("~","Documents","Work","DataScience","Springboard","FoundationsofDataScience","Section4_ExploratoryDataAnalysis")
setwd(path_to_wd)
rm(path_to_wd)
titanic <- read.csv("titanic_clean.csv")
head(titanic)
titanic <- read_csv("titanic_clean.csv")
head(titanic)
titanic <- suppressMessages(read_csv("titanic_clean.csv"))
head(titanic)
titanic_reduced <- titanic %>% select(pclass,survived,sex,age)
str(titanic_reduced)
titanic_reduced
glimpse(titanic)
glimpse(titanic_reduced)
rm(list=ls())
library(dplyr)
library(readr)
library(ggplot2)
path_to_wd <- file.path("~","Documents","Work","DataScience","Springboard","FoundationsofDataScience","Section4_ExploratoryDataAnalysis")
setwd(path_to_wd)
rm(path_to_wd)
titanic <- suppressMessages(read_csv("titanic_clean.csv")
glimpse(titanic)
titanic_reduced <- titanic %>% select(pclass,survived,sex,age)
glimpse(titanic_reduced)
titanic <- suppressMessages(read_csv("titanic_clean.csv")
glimpse(titanic)
titanic_reduced <- titanic %>% select(pclass,survived,sex,age)
glimpse(titanic_reduced)
titanic <- suppressMessages(read_csv("titanic_clean.csv")
glimpse(titanic)
titanic_reduced <- titanic %>% select(pclass,survived,sex,age)
glimpse(titanic_reduced)
titanic <- suppressMessages(read_csv("titanic_clean.csv"))
glimpse(titanic)
titanic_reduced <- titanic %>% select(pclass,survived,sex,age)
glimpse(titanic_reduced)
str(titanic_reduced)
rm(list=ls())
library(dplyr)
library(readr)
library(ggplot2)
path_to_wd <- file.path("~","Documents","Work","DataScience","Springboard","FoundationsofDataScience","Section4_ExploratoryDataAnalysis")
setwd(path_to_wd)
rm(path_to_wd)
titanic_full <- suppressMessages(read_csv("titanic_clean.csv"))
glimpse(titanic_full)
titanic <- titanic_full %>% select(pclass,survived,sex,age)
glimpse(titanic)
str(titanic)
ggplot(titanic, aes(x=factor(Pclass),fill=factor(Sex))) + geom_bar(position='dodge')
ggplot(titanic, aes(x=factor(pclass),fill=factor(Sex))) + geom_bar(position='dodge')
ggplot(titanic, aes(x=factor(pclass),fill=factor(sex))) + geom_bar(position='dodge')
ggplot(titanic, aes(x=factor(pclass),fill=factor(sex))) + geom_bar(position="dodge")+facet_grid(".~survived")
ggplot(titanic, aes(x=factor(pclass),y=age, col=factor(sex))) + geom_jitter(position=posn.j, size=3, alpha=0.5)+facet_grid(".~survived")
posn.j <- position_jitter(0.5, 0)
ggplot(titanic, aes(x=factor(pclass),y=age, col=factor(sex))) + geom_jitter(position=posn.j, size=3, alpha=0.5)+facet_grid(".~survived")
titanic %>% filter(is.na())
titanic %>% filter(is.na(sex))
titanic %>% filter(is.na(pclass))
titanic %>% filter(is.na(survived))
titanic %>% filter(is.na(survived) | is.na(pclass))
titanic %>% filter(is.na(survived) | is.na(age))
titanic %>% filter(is.na(survived) & is.na(age))
titanic %>% filter(is.na(survived) | is.na(age))
rm(list=ls())
library(dplyr)
library(readr)
library(ggplot2)
path_to_wd <- file.path("~","Documents","Work","DataScience","Springboard","FoundationsofDataScience","Section4_ExploratoryDataAnalysis")
setwd(path_to_wd)
rm(path_to_wd)
titanic_full <- suppressMessages(read_csv("titanic_clean.csv"))
str(titanic_full)
titanic <- titanic_full %>% select(pclass,survived,sex,age)
glimpse(titanic)
str(titanic)
ggplot(titanic, aes(x=factor(pclass),fill=factor(sex))) + geom_bar(position='dodge')
Titanic
View(Titanic)
quit()
