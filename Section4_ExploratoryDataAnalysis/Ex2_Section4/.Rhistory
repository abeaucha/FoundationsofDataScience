test[-3]
plot(trees$Girth,m1$res)
plot(trees$Girth,m1$res)
par(mfrow=c(1,3))
plot(trees$Girth,m1$res)
plot(trees$Volume,m1$res)
plot(m1$fitted,m1$res)
qqnorm(m1$res)
qqnorm(m1$res)
qqnorm(m1$res)
?qqnorm
qqline(m1$res)
qqnorm(m1$res)
qqline(m1$res)
hist(m1$res)
hist(m1$res[-31])
hist(m1$res)
str(iris)
head(iris)
summary(iris)
levels(iris)
levels(iris$Species)
plot(iris)
plot(iris$Sepal.Length,iris$Sepal.Width,col=iris$Species)
ind <- sample(1:2, nrow(iris),replace=TRUE,prob=c(0.7,0.3))
ind
?sample
trainData<-iris[ind==1,]
testData<-iris[ind==2,]
install.packages(party)
library(party)
install.packages(party)
library(party)
install.packages("party")
library("party")
myFormula <- Species ~ Sepal.Length + Sepal.Width + Petal.Length + Petal.Width
myFormula
typeof(myFormula)
myFormula <- Species ~ Sepal.Length + Sepal.Width + Petal.Length + Petal.Width
iris.tree <- ctree(myFormula,data=trainData)
table(predict(iris.tree),trainData$Species)
plot(iris.trees)
plot(iris.tree)
testPred <- predict(iris.tree,newdata=testData)
table(testPred,testData$Species)
q()
x <- 1:5
x
typeof(x)
is.vector(x)
"Hello World!"
c1 <- 1:5
c2 <- -1:-5
D <- cbind(c1,c2)
D
cor.test(trees$Girth,trees$Volume)
reg_gas<-c(16,20,21,22,23,22,27,25,27,28)
prem_gas<-c(19,22,24,24,25,25,26,26,28,32)
t.test(prem_gas,reg_gas,alternative="greater",paired=TRUE) #The paired option has to be set to T, because same car?
q()
pwd
get.wd()
wd.get()
wget
install.packages("swirl")
library("swirl")
version
quit
quit()
library("swirl")
install.packages("swirl")
library("swirl")
swirl()
install_course("Regression Models")
install_course("Statistical Inference")
install_course("Exploratory Data Analysis")
info()
nxt()
bye()
swirl()
5+7
bye()
quit()
search()
?search
x <-1
y<-3
x+y
quit()
library("swirl")
swirl()
install_course("Data Analysis")
install_course("Data Analysis")
swirl()
install_course("Data Analysis")
play()
bye()
swirl()
nxt()
play()
nxt()
bye()
swirl()
library("swirl")
swirl()
info()
play()
nxt()
0
bye()
swirl()
quit
exit
exit()
quit()
quit()
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
summary(cars)
library(xts)
install.packages("xts")
install.packages("quantmod")
library(xts)
library(quantmod)
library(zoo)
library(TTR)
library(xts)
library(quantmod)
prices <- getSymbols("GOOG", auto.assign = FALSE)
move <- Cl(last(prices)) - Op(last(prices))
ifelse(move > 0, "BUY", "SELL")
chartSeries(prices, theme = chartTheme("white", bg.col = "white"))
render
?render
library(rmarkdown)
render
clear
library(swirl)
?rm
rm(move)
rm()
rm(list=ls())
swirl()
ls()
?ls
x = 1
ls()
ls
ls()
pwd()
ls()
rm(x)
rm(ls())
swirl()
5+7
x <- 5+7
x
y <- x - 3
y
z <- c(1.1, 9, 3.14)
?c
z
c(z,555)
c(z,555,z)
z*2+100
sqrt(z-1)
my_sqrt<-sqrt(z-1)
my_sqrt
my_div <- z/my_sqrt
my_div
c(1,2,3,4)+c(0,10)
c(1,2,3,4)+c(0,10,100)
z*2+1000
my_div
getwd()
ls()
x<-9
ls()
list.files()
?list.files
args(list.files())
args(list.files
)
play()
getwd()
list.dir()
dir()
nxt()
old.dir<-getwd()
play()
args(dir.create
)
nxt()
dir.create(testdir)
dir.create("testdir")
dir()
nxt()
setwd("testdir")
file.create("mytest.R")
ls()
dir()
file.exists("mytest.R")
file.info("mytest.R")
play()
args(file.rename
)
nxt()
file.rename("mytest.R","mytest2.R")
file.copy("mytest2.R","mytest3.R")
file.path("mytest3.R")
play()
args(file.path)
?args
?file.path
nxt()
file.path("folder1","folder2")
play()
dir()
nxt()
?dir.create
dir.create(file.path("testdir2","testdir3"), recursive = TRUE)
setwd(old.dir)
unlink("testdir",recursive = TRUE)
my_vector<-1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4,5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector
)
my_matrix <- my_vector
?matrix
my_matrix2 <- matrix(1:20, ncol=5, byrow=TRUE)
my_matrix2 <- matrix(1:20, ncol=5, nrow=4)
identical(my_matrix,my_matrix2)
patients<-c("Bill","Gina","Kelly","Sean")
cbind(patients,my_matrix)
my_data<-data.frame(patients, my_matrix)
my_data
class(my_data)
cnames<-c("patient","age","weight","bp","rating","test")
play()
?colnames
colnames(my_data) <- cnames
nxt()
colnames(my_data)<-cnames
my_data
play()
nxt()
ls()
class(plants)
dim(plants)
nrow(plants)
ncol(plants)
object.size(plants)
names(plants)
head(plants)
play()
?head
nxt()
head(plants,n=10)
tail(plants,n=15)
summary(plants)
0
info()
bye()
swirl()
bye()
quit()
swirl()
library("swirl")
swirl()
bye()
bye()
install_course("Getting_and_Cleaning_Data")
swirl()
quit()
install.packages("dplyr")
install.packages("tidyr")
View(diamonds)
library(ggplot2)
install.packages("ggplot2")
library(ggplot2)
head(diamonds)
library(dplyr)
tbl_df(diamonds)
View(diamonds)
?view
?view
?View
diamonds$x %>% mean()
install.packages("devtools")
devtools::install_github("rstudio/EDAWR")
library(EDAWR)
head(storms)
class(storms)
storms
pollution
cases
gather(cases,"year","n",2:4)
library(tidyr)
gather(cases,"year","n",2:4)
case[1,]
cases[1,]
cases[,1]
cases[,2:4]
library(dplyr)
pollution
pollution %>% group_by(city)
pollution %>% group_by(size)
pollution %>% group_by(city) %>% summarise(mean=mean(amount))
install.packages("hflights")
quit()
library(swirl)
swirl()
c(0.5,55,-10,6)
c(0.5,55.,-10.,6.)
num_vect<-c(0.5,55.,-10.,6.)
bye()
quit()
library(swirl)
swirl
swirl()
bye()
library(swirl)
swirl()
0
bye()
swirl()
range(cars$price)
play()
head(cars)
nxt()
range(cars$price)[2]-range(cars)
range(cars$price)[2]-range(cars$price)[1]
var(cars$price)
sd(cars$price)
20
quit()
#Clear working environment.
rm(list=ls())
#Load additional data wrangling libraries
suppressMessages(library(dplyr))
library(haven)
library(ggplot2)
#Set the wd
path_to_wd <- file.path("~","Documents","Work","DataScience","Springboard","FoundationsofDataScience","Section4_ExploratoryDataAnalysis","Section4_Ex2")
setwd(path_to_wd)
rm(path_to_wd)
adult_full <- as.data.frame(read_spss("./chis09_adult_spss/chis09_adult_spss/ADULT.sav"))
adult <- adult_full %>% select(RBMI,BMI_P,RACEHPR2,SRSEX,SRAGE_P,MARIT2,AB1,ASTCUR,AB51,POVLL)
# Explore the dataset with summary and str
summary(adult)
str(adult)
# Age histogram
ggplot(adult, aes(x=SRAGE_P))+geom_histogram()
# BMI histogram
ggplot(adult, aes(x=BMI_P))+geom_histogram()
# Age colored by BMI, default binwidth
ggplot(adult, aes(x=SRAGE_P, col=BMI_P, fill=factor(RBMI)))+geom_histogram(binwidth=1)
# Remove individual aboves 84
adult <- adult[adult$SRAGE_P <= 84, ]
# Remove individuals with a BMI below 16 and above or equal to 52
adult <- adult[adult$BMI_P >= 16 & adult$BMI_P < 52, ]
# Filter rows so that we only have the following races: Latino, Asian, African American, White
adult <- adult %>% filter(RACEHPR2 %in% c(1,4,5,6))
# Relabel the race variable:
adult$RACEHPR2 <- factor(adult$RACEHPR2, labels = c("Latino", "Asian", "African American", "White"))
# Relabel the BMI categories variable:
adult$RBMI <- factor(adult$RBMI, labels = c("Under-weight","Normal-weight", "Over-weight", "Obese"))
# The color scale used in the plot
BMI_fill <- scale_fill_brewer("BMI Category", palette = "Reds")
# Theme to fix category display in faceted plot
fix_strips <- theme(strip.text.y = element_text(angle = 0, hjust = 0, vjust = 0.1, size = 14), strip.background = element_blank(), legend.position = "none")
# Histogram, add BMI_fill and customizations
#ggplot(adult, aes (x = SRAGE_P, fill= factor(RBMI))) + geom_histogram(binwidth = 1) + fix_strips + BMI_fill + facet_grid(RBMI~.)+theme_classic()
ggplot(adult, aes(x=SRAGE_P, fill=factor(RBMI)))+geom_histogram(binwidth=1) + facet_grid(RBMI~.)+theme_classic()+BMI_fill+fix_strips
# Basic count histogram
ggplot(adult, aes (x = SRAGE_P, fill= factor(RBMI))) +
geom_histogram(binwidth = 1) +
BMI_fill
# Density histogram
ggplot(adult, aes (x = SRAGE_P, fill= factor(RBMI))) +
geom_histogram(binwidth = 1, aes(y=..density..)) +
BMI_fill
# Faceted count histogram
ggplot(adult, aes (x = SRAGE_P, fill= factor(RBMI))) +
geom_histogram(binwidth = 1) +
BMI_fill +facet_grid(RBMI~.)
# Faceted density histogram
ggplot(adult, aes (x = SRAGE_P, fill= factor(RBMI))) +
geom_histogram(binwidth = 1, aes(y=..density..)) +
BMI_fill + facet_grid(RBMI~.)
# Density histogram with position = "fill"
ggplot(adult, aes (x = SRAGE_P, fill= factor(RBMI))) +
geom_histogram(binwidth = 1, aes(y=..density..), position="fill") +
BMI_fill
# The accurate histogram
ggplot(adult, aes (x = SRAGE_P, fill= factor(RBMI))) +
geom_histogram(binwidth = 1, aes(y=..count../sum(..count..)), position="fill") +
BMI_fill
# An attempt to facet the accurate frequency histogram from before (failed)
ggplot(adult, aes (x = SRAGE_P, fill= factor(RBMI))) +
geom_histogram(aes(y = ..count../sum(..count..)), binwidth = 1, position = "fill") +
BMI_fill +
facet_grid(RBMI ~ .)
# Create our contingency table
DF <- table(adult$RBMI, adult$SRAGE_P)
head(DF)
# Create our contingency table
DF <- table(adult$RBMI, adult$SRAGE_P)
DF[1,2]
# Create our contingency table
DF <- table(adult$RBMI, adult$SRAGE_P)
DF[,1:10]
#Clear working environment.
rm(list=ls())
#Load additional data wrangling libraries
suppressMessages(library(dplyr))
library(haven)
library(ggplot2)
#Set the wd
path_to_wd <- file.path("~","Documents","Work","DataScience","Springboard","FoundationsofDataScience","Section4_ExploratoryDataAnalysis","Section4_Ex2")
setwd(path_to_wd)
rm(path_to_wd)
adult_full <- as.data.frame(read_spss("./chis09_adult_spss/chis09_adult_spss/ADULT.sav"))
adult <- adult_full %>% select(RBMI,BMI_P,RACEHPR2,SRSEX,SRAGE_P,MARIT2,AB1,ASTCUR,AB51,POVLL)
# Explore the dataset with summary and str
summary(adult)
str(adult)
# Age histogram
ggplot(adult, aes(x=SRAGE_P))+geom_histogram()
# BMI histogram
ggplot(adult, aes(x=BMI_P))+geom_histogram()
# Age colored by BMI, default binwidth
ggplot(adult, aes(x=SRAGE_P, col=BMI_P, fill=factor(RBMI)))+geom_histogram(binwidth=1)
# Remove individual aboves 84
adult <- adult[adult$SRAGE_P <= 84, ]
# Remove individuals with a BMI below 16 and above or equal to 52
adult <- adult[adult$BMI_P >= 16 & adult$BMI_P < 52, ]
# Filter rows so that we only have the following races: Latino, Asian, African American, White
adult <- adult %>% filter(RACEHPR2 %in% c(1,4,5,6))
# Relabel the race variable:
adult$RACEHPR2 <- factor(adult$RACEHPR2, labels = c("Latino", "Asian", "African American", "White"))
# Relabel the BMI categories variable:
adult$RBMI <- factor(adult$RBMI, labels = c("Under-weight","Normal-weight", "Over-weight", "Obese"))
# The color scale used in the plot
BMI_fill <- scale_fill_brewer("BMI Category", palette = "Reds")
# Theme to fix category display in faceted plot
fix_strips <- theme(strip.text.y = element_text(angle = 0, hjust = 0, vjust = 0.1, size = 14), strip.background = element_blank(), legend.position = "none")
# Histogram, add BMI_fill and customizations
#ggplot(adult, aes (x = SRAGE_P, fill= factor(RBMI))) + geom_histogram(binwidth = 1) + fix_strips + BMI_fill + facet_grid(RBMI~.)+theme_classic()
ggplot(adult, aes(x=SRAGE_P, fill=factor(RBMI)))+geom_histogram(binwidth=1) + facet_grid(RBMI~.)+theme_classic()+BMI_fill+fix_strips
# Basic count histogram
ggplot(adult, aes (x = SRAGE_P, fill= factor(RBMI))) +
geom_histogram(binwidth = 1) +
BMI_fill
# Density histogram
ggplot(adult, aes (x = SRAGE_P, fill= factor(RBMI))) +
geom_histogram(binwidth = 1, aes(y=..density..)) +
BMI_fill
# Faceted count histogram
ggplot(adult, aes (x = SRAGE_P, fill= factor(RBMI))) +
geom_histogram(binwidth = 1) +
BMI_fill +facet_grid(RBMI~.)
# Faceted density histogram
ggplot(adult, aes (x = SRAGE_P, fill= factor(RBMI))) +
geom_histogram(binwidth = 1, aes(y=..density..)) +
BMI_fill + facet_grid(RBMI~.)
# Density histogram with position = "fill"
ggplot(adult, aes (x = SRAGE_P, fill= factor(RBMI))) +
geom_histogram(binwidth = 1, aes(y=..density..), position="fill") +
BMI_fill
# The accurate histogram
ggplot(adult, aes (x = SRAGE_P, fill= factor(RBMI))) +
geom_histogram(binwidth = 1, aes(y=..count../sum(..count..)), position="fill") +
BMI_fill
# An attempt to facet the accurate frequency histogram from before (failed)
ggplot(adult, aes (x = SRAGE_P, fill= factor(RBMI))) +
geom_histogram(aes(y = ..count../sum(..count..)), binwidth = 1, position = "fill") +
BMI_fill +
facet_grid(RBMI ~ .)
# Create our contingency table
DF <- table(adult$RBMI, adult$SRAGE_P)
DF[,1:10]
# Use apply on DF to get frequency of each group
# The argument '2' indicates the apply function should be mapped across the columns,
# rather than the rows.
DF_freq<-apply(DF, 2, function(x) {x/sum(x)})
DF_freq[,1:10]
# Load reshape2 and use melt on DF to create DF_melted
library(reshape2)
DF_melted <- melt(DF_freq)
# Change names of DF_melted
names(DF_melted) <- c("FILL", "X", "value")
head(DF_melted)
# Add code to make this a faceted plot
ggplot(DF_melted, aes(x = X, y = value, fill = FILL)) +
geom_bar(stat = "identity", position = "stack") +
BMI_fill + facet_grid(FILL ~ .)
# The initial contingency table
DF <- as.data.frame.matrix(table(adult$SRAGE_P, adult$RBMI))
head(DF)
install.packages("car")
rm(list=ls())
path_to_wd <- file.path("~","Documents","Work","DataScience","Springboard","FoundationsofDataScience","Section4_ExploratoryDataAnalysis","Section4_Ex2")
setwd(path_to_wd)
rm(path_to_wd)
source('~/Documents/Work/DataScience/Springboard/FoundationsofDataScience/Section4_ExploratoryDataAnalysis/Section4_Ex2/CHIS.R', echo=TRUE)
