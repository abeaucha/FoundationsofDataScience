global_p11 <- global_p10 +
geom_smooth(data=subset(percentData, percentData$Ratings==1), method="lm", se=T, formula=y~poly(x,2, raw=TRUE), linetype="dashed", size=0.5, alpha=0.1, col="black") +
geom_smooth(data=subset(percentData, percentData$Ratings==2), method="lm", se=T, formula=y~poly(x,1, raw=TRUE), linetype="dashed", size=0.5, alpha=0.1, col="black") +
geom_smooth(data=subset(percentData, percentData$Ratings==3), method="lm", se=T, formula=y~poly(x,1, raw=TRUE), linetype="dashed", size=0.5, alpha=0.1, col="black") +
geom_smooth(data=subset(percentData, percentData$Ratings==4), method="lm", se=T, formula=y~poly(x,2, raw=TRUE), linetype="dashed", size=0.5, alpha=0.1, col="black") +
geom_smooth(data=subset(percentData, percentData$Ratings==5), method="lm", se=T, formula=y~poly(x,2, raw=TRUE), linetype="dashed", size=0.5, alpha=0.1, col="black")
global_p11
p +
geom_line(stat="smooth", data=subset(percentData, percentData$Ratings==1), method="lm", se=T, formula=y~poly(x,2), linetype="dashed", size=0.5) +
geom_line(stat="smooth", data=subset(percentData, percentData$Ratings==2), method="lm", se=T, formula=y~poly(x,3), linetype="dashed", size=0.5) +
geom_line(stat="smooth", data=subset(percentData, percentData$Ratings==3), method="lm", se=T, formula=y~poly(x,1), linetype="dashed", size=0.5) +
geom_line(stat="smooth", data=subset(percentData, percentData$Ratings==4), method="lm", se=T, formula=y~poly(x,2), linetype="dashed", size=0.5) +
geom_line(stat="smooth", data=subset(percentData, percentData$Ratings==5), method="lm", se=T, formula=y~poly(x,2), linetype="dashed", size=0.5)
global_p10 +
geom_line(stat="smooth", data=subset(percentData, percentData$Ratings==1), method="lm", se=T, formula=y~poly(x,2), linetype="dashed", size=0.5) +
geom_line(stat="smooth", data=subset(percentData, percentData$Ratings==2), method="lm", se=T, formula=y~poly(x,3), linetype="dashed", size=0.5) +
geom_line(stat="smooth", data=subset(percentData, percentData$Ratings==3), method="lm", se=T, formula=y~poly(x,1), linetype="dashed", size=0.5) +
geom_line(stat="smooth", data=subset(percentData, percentData$Ratings==4), method="lm", se=T, formula=y~poly(x,2), linetype="dashed", size=0.5) +
geom_line(stat="smooth", data=subset(percentData, percentData$Ratings==5), method="lm", se=T, formula=y~poly(x,2), linetype="dashed", size=0.5)
summary(lm(percentRatings ~ poly(as.numeric(Year),2), data=subset(percentData, percentData$Ratings==1)))
summary(lm(percentRatings ~ poly(as.numeric(Year),1), data=subset(percentData, percentData$Ratings==2)))
summary(lm(percentRatings ~ poly(as.numeric(Year),1), data=subset(percentData, percentData$Ratings==3)))
summary(lm(percentRatings ~ poly(as.numeric(Year),2), data=subset(percentData, percentData$Ratings==4)))
summary(lm(percentRatings ~ poly(as.numeric(Year),2), data=subset(percentData, percentData$Ratings==5)))
CapstoneDir = "/Users/Antoine/Documents/Work/DataScience/Springboard/FoundationsofDataScience/CapstoneProject"
setwd(CapstoneDir)
library(readr)
library(dplyr)
library(tidyr)
library(tm)
library(wordcloud)
library(ggplot2)
CapstoneDF <- read_csv("./Data/CapstoneCleanData.csv")
str(CapstoneDF)
summary(CapstoneDF)
dim(CapstoneDF)
CapstoneDF <- CapstoneDF  %>% mutate(Quarters = quarters.Date(Dates))
CapstoneDF <- CapstoneDF %>% separate(Dates, c("Year","Month","Day"))
tempdf <- CapstoneDF %>% unite("YearMonth", Year, Month, sep="-")
CapstoneDF$YearMonth <- tempdf$YearMonth
tempdf <- CapstoneDF %>% unite("YearQuarters", Year, Quarters, sep="-")
CapstoneDF$YearQuarters <- tempdf$YearQuarters
CapstoneDF$Website <- factor(CapstoneDF$Website)
CapstoneDF$Quarters <- factor(CapstoneDF$Quarters)
head(CapstoneDF[-1])
wd=10.0
ht=10.0
mean(CapstoneDF$Ratings)
global_p1 <- ggplot(CapstoneDF, aes(x=Year, y=Ratings)) +
stat_summary(fun.y=mean, geom="point") +
coord_cartesian(ylim=c(2.5,4.5))
ggsave(filename="./Plots/global_YearRatings.png",global_p1, width=wd, height=ht)
global_p2 <- ggplot(CapstoneDF, aes(x=YearQuarters, y=Ratings)) +
stat_summary(fun.y=mean, geom="point") +
coord_cartesian(ylim=c(2.5,4.5))
ggsave(filename="./Plots/Global/global_YearQuartersRatings.png",global_p2,width=wd,height=ht)
ggplot(CapstoneDF, aes(x=YearQuarters, y=Ratings)) +
stat_summary(fun.y=mean, geom="point")+
stat_summary(aes(x=Year), fun.y=mean, geom="point", colour="red", size=4.0, position="dodge")
global_p3 <- ggplot(CapstoneDF, aes(x=YearMonth, y=Ratings, col=YearQuarters)) +
stat_summary(fun.y=mean, geom="point") +
coord_cartesian(ylim=c(2.5,4.5)) +
theme(axis.text.x =element_text(angle=90))
ggsave(filename="./Plots/Global/global_YearMonthRatings.png",global_p3, width=wd, height=ht)
global_p4 <- ggplot(CapstoneDF, aes(x=ceiling(Ratings))) + geom_bar(aes(fill=Website))
ggsave(filename="./Plots/Global/global_RatingsHist.png", global_p4, width=wd, height=ht)
global_p5<-ggplot(CapstoneDF, aes(Website)) + geom_bar()
ggsave(filename="./Plots/Global/global_Website.png", global_p5, width=wd, height=ht)
global_p6 <- ggplot(CapstoneDF, aes(ceiling(Ratings), y=..density..)) +
geom_histogram(binwidth=1, col="black") +
facet_grid(.~Year)
global_p6
ggsave(filename="./Plots/Global/global_RatingsYearHist_dens.png", global_p6, width=wd, height=ht)
global_p7 <- ggplot(CapstoneDF, aes(Website)) +
geom_bar() +
facet_grid(.~Year) +
theme(axis.text.x =element_text(angle=90))
ggsave(filename="./Plots/Global/global_WebsiteYearHist.png", global_p7, width=wd, height=ht)
global_p8 <- ggplot(CapstoneDF, aes(ceiling(Ratings))) + geom_bar() + facet_grid(.~Website)
ggsave(filename="./Plots/Global/global_RatingsWebsiteHist.png", global_p8, width=wd, height=ht)
yearVec <- sort(unique(as.numeric(CapstoneDF$Year)))
CapstoneDF_t <- CapstoneDF
CapstoneDF_t$Ratings <- ceiling(CapstoneDF_t$Ratings)
d1 <- CapstoneDF_t %>% group_by(Year,Ratings) %>% summarise(countRatings=n())
d2 <- CapstoneDF_t %>% group_by(Year) %>% summarise(countYear=n())
percentData <- left_join(d1,d2, by="Year")
percentData$Ratings <- ceiling(percentData$Ratings)
vec2 <- NULL
for(i in 1:length(yearVec)){
print(i)
vec <- percentData$Ratings %>% subset(percentData$Year == yearVec[i])
if(!(1 %in% vec)){
yearCount <- subset(percentData$countYear, percentData$Year==yearVec[i])[1]
vec2 <- data.frame(Year=as.character(yearVec[i]), Ratings=as.numeric(1), countRatings=as.integer(0), countYear=as.integer(yearCount))
print(vec2)
percentData <- (bind_rows(vec2, as.data.frame(percentData)))
}
}
percentData <- percentData %>% arrange(Ratings) %>%  mutate(percentRatings = countRatings/countYear)
percentData <- percentData %>% select(Year,Ratings,percentRatings, countYear) %>% arrange(Year,Ratings)
percentData$Ratings <- factor(percentData$Ratings)
ggplot(percentData, aes(x=Year, y=percentRatings, group=Ratings)) +
geom_line(aes(col=Ratings)) +
geom_point(aes(col=Ratings, size=countYear))
global_p10 <- ggplot(percentData, aes(x=Year, y=percentRatings, group=Ratings)) +
#geom_line(aes(col=Ratings)) +
geom_point(aes(col=Ratings,  size=countYear))
global_p10
ggsave(filename="./Plots/Global/global_percentRatings.png", global_p10, width=wd, height=ht)
global_p11 <- global_p10 +
geom_smooth(data=subset(percentData, percentData$Ratings==1), method="lm", se=T, formula=y~poly(x,2, raw=TRUE), linetype="dashed", size=0.5, alpha=0.1, col="black") +
geom_smooth(data=subset(percentData, percentData$Ratings==2), method="lm", se=T, formula=y~poly(x,1, raw=TRUE), linetype="dashed", size=0.5, alpha=0.1, col="black") +
geom_smooth(data=subset(percentData, percentData$Ratings==3), method="lm", se=T, formula=y~poly(x,1, raw=TRUE), linetype="dashed", size=0.5, alpha=0.1, col="black") +
geom_smooth(data=subset(percentData, percentData$Ratings==4), method="lm", se=T, formula=y~poly(x,2, raw=TRUE), linetype="dashed", size=0.5, alpha=0.1, col="black") +
geom_smooth(data=subset(percentData, percentData$Ratings==5), method="lm", se=T, formula=y~poly(x,2, raw=TRUE), linetype="dashed", size=0.5, alpha=0.1, col="black")
global_p11
ggsave(filename="./Plots/Global/global_percentRatings_model.png", global_p11, width=wd, height=ht)
global_p10 +
geom_line(stat="smooth", data=subset(percentData, percentData$Ratings==1), method="lm", se=T, formula=y~poly(x,2), linetype="dashed", size=0.5) +
geom_line(stat="smooth", data=subset(percentData, percentData$Ratings==2), method="lm", se=T, formula=y~poly(x,3), linetype="dashed", size=0.5) +
geom_line(stat="smooth", data=subset(percentData, percentData$Ratings==3), method="lm", se=T, formula=y~poly(x,1), linetype="dashed", size=0.5) +
geom_line(stat="smooth", data=subset(percentData, percentData$Ratings==4), method="lm", se=T, formula=y~poly(x,2), linetype="dashed", size=0.5) +
geom_line(stat="smooth", data=subset(percentData, percentData$Ratings==5), method="lm", se=T, formula=y~poly(x,2), linetype="dashed", size=0.5)
summary(lm(percentRatings ~ poly(as.numeric(Year),2), data=subset(percentData, percentData$Ratings==1)))
summary(lm(percentRatings ~ poly(as.numeric(Year),1), data=subset(percentData, percentData$Ratings==2)))
summary(lm(percentRatings ~ poly(as.numeric(Year),1), data=subset(percentData, percentData$Ratings==3)))
summary(lm(percentRatings ~ poly(as.numeric(Year),2), data=subset(percentData, percentData$Ratings==4)))
summary(lm(percentRatings ~ poly(as.numeric(Year),2), data=subset(percentData, percentData$Ratings==5)))
global_p1 <- ggplot(CapstoneDF, aes(x=Year, y=Ratings)) +
stat_summary(fun.y=mean, geom="point") +
coord_cartesian(ylim=c(2.5,4.5))
ggsave(filename="./Plots/global_YearRatings.png",global_p1, width=wd, height=ht)
global_p1 <- ggplot(CapstoneDF, aes(x=Year, y=Ratings)) +
stat_summary(fun.y=mean, geom="point") +
coord_cartesian(ylim=c(2.5,4.5))
ggsave(filename="./Plots/Global/global_YearRatings.png",global_p1, width=wd, height=ht)
Capstone_wA <- WordCloudAnalysis(CapstoneDF)
names(Capstone_wA)
head(Capstone_wA$wordFreq)
wordcloud(Capstone_wA$Corpus, max.word=200, random.order=F)
findAssocs(Capstone_wA$TDM, "food", .50)
WordCloudAnalysis <- function(dataset){
#Remove "The" or "the"  from reviews, since the tm_map() function below doesn't do it.
dataset$Reviews <- gsub("[Tt]he", "", dataset$Reviews)
#Create corpus from the text data
dataCorpus <- dataset$Reviews %>% VectorSource() %>% Corpus()
#Remove punctuation and english stopwords from text data
dataCorpus <- dataCorpus %>% tm_map(removePunctuation) %>% tm_map(removeWords, stopwords("english"))
#Create term document matrix and convert to matrix class.
TDM <- TermDocumentMatrix(dataCorpus)
TDM_m <- TDM %>% as.matrix()
#Compute word frequencies from TDM.
wFreqs = sort(rowSums(TDM_m), decreasing=TRUE)
return(list("Corpus" = dataCorpus, "TDM"=TDM, "wordFreq"=wFreqs))
}
Capstone_wA <- WordCloudAnalysis(CapstoneDF)
names(Capstone_wA)
head(Capstone_wA$wordFreq)
wordcloud(Capstone_wA$Corpus, max.word=200, random.order=F)
findAssocs(Capstone_wA$TDM, "food", .50)
findAssocs(Capstone_wA$TDM, "food", .4)
findAssocs(Capstone_wA$TDM, "food", .1)
findAssocs(Capstone_wA$TDM, "food", .15)
findAssocs(Capstone_wA$TDM, "food", .18)
findAssocs(Capstone_wA$TDM, "good", .18)
findAssocs(Capstone_wA$TDM, "good", .20)
findAssocs(Capstone_wA$TDM, "great", .20)
CapstoneDF$Reviews[grepl("[Gg]reat|[Bb]lasting",CapstoneDF$Reviews)]
CapstoneDF$Reviews[grepl("[Gg]reat.*[Bb]lasting",CapstoneDF$Reviews)]
CapstoneDF$Reviews[grepl("[Bb]lasting",CapstoneDF$Reviews)]
findAssocs(Capstone_wA$TDM, "great", .20)
length(CapstoneDF$Reviews[grepl("[Gg]reat",CapstoneDF$Reviews)])
length(CapstoneDF$Reviews)
length(CapstoneDF$Reviews[grepl("[Gg]reat",CapstoneDF$Reviews)])/length(CapstoneDF$Reviews)
CapstoneDF$Reviews[grepl("[Bb]lasting",CapstoneDF$Reviews)]
findAssocs(Capstone_wA$TDM, "great", .20)
CapstoneDF$Reviews[grepl("awkwardly",CapstoneDF$Reviews)]
Capstone_wA$TDM
findAssocs(Capstone_wA$TDM, "great", .20)
CapstoneDF$Reviews[grepl("college",CapstoneDF$Reviews)]
findAssocs(Capstone_wA$TDM, "great", .20)
CapstoneDF$Reviews[grepl("article",CapstoneDF$Reviews)]
?findAssocs
findAssocs(Capstone_wA$TDM, "good", .20)
findAssocs(Capstone_wA$TDM, "good", .20)
CapstoneDF$Reviews[grepl("croutons",CapstoneDF$Reviews)]
length(CapstoneDF$Reviews[grepl("surprisingly",CapstoneDF$Reviews)])
findAssocs(Capstone_wA$TDM, "good", .20)
CapstoneDF$Reviews[grepl("vinaigrette",CapstoneDF$Reviews)]
length(CapstoneDF$Reviews[grepl("vinaigrette",CapstoneDF$Reviews)])
length(CapstoneDF$Reviews[grepl("thursday",CapstoneDF$Reviews)])
length(CapstoneDF$Reviews[grepl("[Tt]hursday",CapstoneDF$Reviews)])
length(CapstoneDF$Reviews[grepl("[Tt]hursday.* good",CapstoneDF$Reviews)]) #5
length(CapstoneDF$Reviews[grepl("vinaigrette.*good",CapstoneDF$Reviews)]) #2 reviews
length(CapstoneDF$Reviews[grepl("surprisingly.*good",CapstoneDF$Reviews)]) #6 reviews
length(CapstoneDF$Reviews[grepl("[Gg]ood",CapstoneDF$Reviews)]) #270 reviews
length(CapstoneDF$Reviews[grepl("[Gg]ood",CapstoneDF$Reviews)])/length(CapstoneDF$Reviews)
findAssocs(Capstone_wA$TDM, "great", .10)
findAssocs(Capstone_wA$TDM, "great", .20)
CapstoneDF$Reviews[grepl("[Bb]lasting",CapstoneDF$Reviews)]
CapstoneDF$Reviews[grepl("awkwardly",CapstoneDF$Reviews)] #Again only one review
length(CapstoneDF$Reviews[grepl("[Gg]reat",CapstoneDF$Reviews)]) #270 reviews
length(CapstoneDF$Reviews[grepl("[Gg]reat",CapstoneDF$Reviews)])/length(CapstoneDF$Reviews)
grepl("[Bb]lasting",CapstoneDF$Reviews)
which(grepl("[Bb]lasting",CapstoneDF$Reviews))
CapstoneDF_bad <- CapstoneDF %>% subset(Ratings <= 3)
CapstoneDF_good <- CapstoneDF %>% subset(Ratings > 3)
CapstoneBad_wA <- WordCloudAnalysis(CapstoneDF_bad)
CapstoneGood_wA <- WordCloudAnalysis(CapstoneDF_good)
head(CapstoneBad_wA$wordFreq)
head(CapstoneGood_wA$wordFreq)
length(CapstoneDF$Ratings[grepl("[Gg]ood",CapstoneDF$Reviews)])
length(CapstoneDF_bad$Ratings[grepl("[Gg]ood",CapstoneDF$Reviews)])
length(CapstoneDF_bad$Ratings[grepl("[Gg]ood",CapstoneDF_bad$Reviews)])
t <- CapstoneDF_bad$Ratings[grepl("[Gg]ood",CapstoneDF_bad$Reviews)]
head(t)
table(t)
head(CapstoneBad_wA$wordFreq)
t <- CapstoneDF_bad$Ratings[grepl("[Gg]ood",CapstoneDF_bad$Reviews)]
table(t)
length(CapstoneDF_bad)
dim(CapstoneDF_bad)[1]
dim(CapstoneDF_good)[1]
dim(CapstoneDF_bad)[1]
table(t)
table(t)/212
dim(CapstoneDF_bad)[1] #Total of 212 bad reviews
t <- CapstoneDF_bad$Ratings[grepl("[Gg]ood",CapstoneDF_bad$Reviews)]
length(t)
length(t)/212
table(t)
head(CapstoneBad_wA$wordFreq)
t <- CapstoneDF_bad$Ratings[grepl("[Gg]reat",CapstoneDF_bad$Reviews)]
length(t)
length(t)/212
table(t)
table(t)
t <- CapstoneDF_bad$Ratings[grepl("[Gg]ood",CapstoneDF_bad$Reviews)]
length(t) #96 bad reviews contain the word "good"
length(t)/212 #That's 45%
table(t)
t <- CapstoneDF_bad$Ratings[grepl("[Gg]reat",CapstoneDF_bad$Reviews)]
length(t) #57 with "great"
length(t)/212 #27%
table(t)
log <- grepl("[Gg]reat",CapstoneDF_bad$Reviews)
log
log <- grepl("[Gg]reat",CapstoneDF_bad$Reviews) & (Ratings==2)
log <- grepl("[Gg]reat",CapstoneDF_bad$Reviews) & (CapstoneDF_bad$Ratings==2)
log <- which(grepl("[Gg]reat",CapstoneDF_bad$Reviews) & (CapstoneDF_bad$Ratings==2))
log <- length(which(grepl("[Gg]reat",CapstoneDF_bad$Reviews) & (CapstoneDF_bad$Ratings==2)))
length(which(grepl("[Gg]reat",CapstoneDF_bad$Reviews) & (CapstoneDF_bad$Ratings==2)))
t <- CapstoneDF_bad$Ratings[grepl("[Gg]reat",CapstoneDF_bad$Reviews)]
length(t) #57 with "great"
length(t)/212 #27%
table(t)
CapstoneDF_bad[log]
log <- grepl("[Gg]reat",CapstoneDF_bad$Reviews) & (CapstoneDF_bad$Ratings==2)
CapstoneDF_bad[log]
CapstoneDF_bad$Reviews[log]
dim(CapstoneDF_bad)[1] #Total of 212 bad reviews
t_good <- CapstoneDF_bad$Ratings[grepl("[Gg]ood",CapstoneDF_bad$Reviews)]
length(t_good) #96 bad reviews contain the word "good"
length(t_good)/212 #That's 45%
table(t_good)
t_great <- CapstoneDF_bad$Ratings[grepl("[Gg]reat",CapstoneDF_bad$Reviews)]
length(t_great) #57 with "great"
length(t_great)/212 #27%
table(t_great)
t_great <- ceiling(CapstoneDF_bad$Ratings[grepl("[Gg]reat",CapstoneDF_bad$Reviews)])
length(t_great) #57 with "great"
length(t_great)/212 #27%
table(t_great)
log <- grepl("[Gg]reat",CapstoneDF_bad$Reviews) & (CapstoneDF_bad$Ratings==2)
CapstoneDF_bad$Reviews[log]
head(CapstoneBad_wA$wordFreq)
findAssocs(CapstoneBad_wA$TDM, "food", 0.2)
findAssocs(CapstoneBad_wA$TDM, "food", 0.25)
findAssocs(CapstoneBad_wA$TDM, "service", 0.25)
findAssocs(CapstoneBad_wA$TDM, "service", 0.30)
CapstoneDF_bad$Reviews[grepl("face", CapstoneDF_bad$Reviews)]
CapstoneDF_bad$Year[grepl("face", CapstoneDF_bad$Reviews)]
CapstoneDF_bad$Reviews[grepl("face", CapstoneDF_bad$Reviews)]
length(CapstoneDF_bad$Reviews[grepl("face", CapstoneDF_bad$Reviews)])
findAssocs(CapstoneBad_wA$TDM, "food", 0.25)
findAssocs(CapstoneBad_wA$TDM, "service", 0.30)
length(CapstoneDF_bad$Reviews[grepl("assume", CapstoneDF_bad$Reviews)])
length(CapstoneDF_bad$Reviews[grepl("several", CapstoneDF_bad$Reviews)])
findAssocs(CapstoneBad_wA$TDM, "food", 0.25)
length(CapstoneDF_bad$Reviews[grepl("food", CapstoneDF_bad$Reviews)])
dim(CapstoneDF_bad)[1] #Total of 212 bad reviews
length(CapstoneDF_bad$Reviews[grepl("food", CapstoneDF_bad$Reviews)])
length(CapstoneDF_bad$Reviews[grepl("good", CapstoneDF_bad$Reviews)])
length(CapstoneDF_bad$Reviews[grepl("food", CapstoneDF_bad$Reviews)])
findAssocs(CapstoneBad_wA$TDM, "food", 0.25)
length(CapstoneDF_bad$Reviews[grepl("food.*service|service.*food", CapstoneDF_bad$Reviews)])
length(CapstoneDF_bad$Reviews[grepl("food.*service", CapstoneDF_bad$Reviews)])
length(CapstoneDF_bad$Reviews[grepl("service", CapstoneDF_bad$Reviews)])
length(CapstoneDF_bad$Reviews[grepl("food.*service|service.*food", CapstoneDF_bad$Reviews)])
length(CapstoneDF_bad$Reviews[grepl("food", CapstoneDF_bad$Reviews)])
length(CapstoneDF_bad$Reviews[grepl("food", CapstoneDF_bad$Reviews)])
124/212
t_good <- CapstoneDF_bad$Ratings[grepl("[Gg]ood",CapstoneDF_bad$Reviews)]
length(t_good) #96 bad reviews contain the word "good"
length(t_good)/212 #That's 45%
table(t_good)
t_great <- CapstoneDF_bad$Ratings[grepl("[Gg]reat",CapstoneDF_bad$Reviews)]
length(t_great) #57 with "great"
length(t_great)/212 #27%
table(t_great)
findAssocs(CapstoneBad_wA$TDM, "food", 0.25)
length(CapstoneDF_bad$Reviews[grepl("service", CapstoneDF_bad$Reviews)])
length(CapstoneDF_bad$Reviews[grepl("food.*service|service.*food", CapstoneDF_bad$Reviews)])
findAssocs(CapstoneBad_wA$TDM, "food", 0.25)
head(CapstoneGood_wA$wordFreq)
head(CapstoneBad_wA$wordFreq)
dim(CapstoneDF_good)[1]
dim(CapstoneDF)[1]
dim(CapstoneDF_good)[1]/dim(CapstoneDF)[1]
head(CapstoneGood_wA$wordFreq)
length(CapstoneDF_good$Reviews[grepl("food", CapstoneDF_good$Reviews)])
length(CapstoneDF_good$Reviews[grepl("food", CapstoneDF_good$Reviews)])/dim(CapstoneDF_good)[1]
length(CapstoneDF_good$Reviews[grepl("great", CapstoneDF_good$Reviews)])
162/454
240/454
length(CapstoneDF_good$Reviews[grepl("[Gg]reat", CapstoneDF_good$Reviews)])
213/424
length(CapstoneDF_good$Reviews[grepl("[Gg]ood", CapstoneDF_good$Reviews)])
191/424
96/212
length(CapstoneDF_good$Reviews[grepl("[Ss]ervice", CapstoneDF_good$Reviews)])
210/424
length(CapstoneDF_good$Reviews[grepl("[Ss]ervice.*[Ff]ood|[Ff]ood.*[Ss]ervice", CapstoneDF_good$Reviews)])
138/424
52/212
75/212
head(CapstoneBad_wA$wordFreq)
dim(CapstoneDF_bad)[1] #Total of 212 bad reviews
t_good <- CapstoneDF_bad$Ratings[grepl("[Gg]ood",CapstoneDF_bad$Reviews)]
length(t_good) #96 bad reviews contain the word "good"
length(t_good)/212 #That's 45%
length(CapstoneDF_bad$Reviews[grepl("food", CapstoneDF_bad$Reviews)])
length(CapstoneDF_bad$Reviews[grepl("[Ss]ervice", CapstoneDF_bad$Reviews)])
87/212
212/669
32+68
p <- wordcloud(CapstoneBad_wA$Corpus, max.words=200, random.order=F)
p
head(CapstoneGood_wA$wordFreq)
t <- head(CapstoneGood_wA$wordFreq)
class(t)
names(t)
rbind(t, names(t))
t2 <- rbind(t, names(t))
names(t2) <- NULL
t2
names(t2)
t2
dim(t2)
t_great <- CapstoneDF_good$Ratings[grepl("[Gg]reat",CapstoneDF_good$Reviews)]
table(t_great)
t_good <- CapstoneDF_good$Ratings[grepl("[Gg]ood",CapstoneDF_good$Reviews)]
table(t_good)
table(t_great)/dim(CapstoneDF_good)[1] #Great seems to be used as often in 4 and 5 star reviews.
table(t_good)/dim(CapstoneDF_good)[1] #Good is used more often in 4 star reviews
head(Capstone_wA$wordFreq)
length(CapstoneDF_bad[CapstoneDF_bad$Ratings==1]
)
dim(CapstoneDF_bad[CapstoneDF_bad$Ratings==1])
CapstoneDF_bad$Ratings==1
dim(CapstoneDF_bad)
dim(CapstoneDF_bad[CapstoneDF_bad$Ratings==1])
dim(CapstoneDF_bad[CapstoneDF_bad$Ratings==1],)
dim(CapstoneDF_bad$Reviews[CapstoneDF_bad$Ratings==1])
legnth(CapstoneDF_bad$Reviews[CapstoneDF_bad$Ratings==1])
length(CapstoneDF_bad$Reviews[CapstoneDF_bad$Ratings==1])
length(CapstoneDF_bad$Reviews[CapstoneDF_bad$Ratings==1])
length(CapstoneDF_bad$Reviews[CapstoneDF_bad$Ratings==2])
findAssocs(CapstoneBad_wA$TDM, "food", 0.25)
findAssocs(CapstoneBad_wA$TDM, "service", 0.30)
length(CapstoneDF_bad$Reviews[grepl("food", CapstoneDF_bad$Reviews)])
t<-CapstoneDF_bad %>% filter(grepl("food", CapstoneDF_bad$Reviews))
dim9t
dim(t)
CapstoneDF_bad_food <-CapstoneDF_bad %>% filter(grepl("food", CapstoneDF_bad$Reviews))
CapstoneDF_bad_food <-CapstoneDF_bad %>% filter(grepl("food", CapstoneDF_bad$Reviews)) %>% sample_n(5,replace=TRUE)
dim(t)
dim(CapstoneDF_bad_food)
CapstoneDF_bad_food$Reviews
select(CapstoneDF_bad_food, Reviews, Ratings)
t <- select(CapstoneDF_bad_food, Reviews, Ratings)
t$Ratings
CapstoneDF_bad_food <-CapstoneDF_bad %>% filter(grepl("food", CapstoneDF_bad$Reviews)) %>% sample_n(5,replace=TRUE)
CapstoneDF_bad_food$Ratings
CapstoneDF_bad_food <-CapstoneDF_bad %>% filter(grepl("food", CapstoneDF_bad$Reviews)) %>% sample_n(5,replace=TRUE)
CapstoneDF_bad_food$Ratings
CapstoneDF_bad_food <-CapstoneDF_bad %>% filter(grepl("food", CapstoneDF_bad$Reviews)) %>% sample_n(5,replace=TRUE)
CapstoneDF_bad_food$Ratings
CapstoneDF_bad_food$Reviews
CapstoneDF_bad_great <-CapstoneDF_bad %>% filter(grepl("[Gg]reat", CapstoneDF_bad$Reviews)) %>% sample_n(5,replace=TRUE)
CapstoneDF_bad_great$Ratings
CapstoneDF_bad_great$Reviews
duplicated(CapstoneDF_bad$Reviews)
which(duplicated(CapstoneDF_bad$Reviews))
CapstoneDF_bad$Reviews[205]
grep("I have a condo", CapstoneDF_bad$Reviews)
CapstoneDF_bad$Reviews[207]
grep("Oversalted and dry", CapstoneDF_bad$Reviews)
CapstoneDF_bad$Reviews[c(42,127,205)]
CapstoneDF_bad_great$Reviews
?sample_n
grep("I have a condo in the Aura", CapstoneDF_bad$Reviews)
which(duplicated(CapstoneDF$Reviews))
CapstoneDF$Reviews[462]
grep("I've been meaning to come to Reds for sometime.", CapstoneDF$Reviews)
CapstoneDF$Reviews[1]
CapstoneDF$Reviews[635]
grep("Nice atmosphere and easy walking distance.", CapstoneDF$Reviews)
CapstoneDF$Reviews[637]
CapstoneDF_bad_food <-CapstoneDF_bad %>% filter(grepl("food", CapstoneDF_bad$Reviews)) %>% sample_n(5,replace=TRUE)
CapstoneDF_bad_food$Ratings
CapstoneDF_bad_food$Reviews
select(CapstoneDF_bad_great,Ratings,Year)
select(CapstoneDF_bad_great,Ratings,YearMonth)
YearAnalysis(CapstoneDF, 2013)
YearAnalysis(CapstoneDF, auxData, 2013)
YearAnalysis <- function(df, auxdf, YearVal){
#Subset the data to obtain the desired year.
data <- df %>% subset(Year==YearVal)
print(paste("Here is a summary of the", YearVal, "data frame:"))
#Some summary output
cat("\n")
print(head(data[-1]))
cat("\n")
print(str(data))
cat("\n")
# Print mean value of ratings for that year
print(paste("The mean value of Ratings for", YearVal, "is: ", auxdf$MeanRating[auxdf$Year==YearVal]))
cat("\n")
readline(prompt="Press [Enter] to begin plotting.")
#Plot scatter plot of Ratings in the year, aggregated at the level of quarters
p1 <- ggplot(data,aes(x=YearQuarters, y=Ratings)) + stat_summary(fun.y=mean, geom="point")
print(p1)
readline(prompt="Press [Enter] to generate the next plot.")
#Plot scatter plot of Ratings in the year, aggregated at the level of months.
p2 <- ggplot(data,aes(x=YearMonth, y=Ratings, col=YearQuarters)) + stat_summary(fun.y=mean, geom="point")
print(p2)
readline(prompt="Press [Enter] to generate the next plot.")
#Plot histogram of Ratings, with Website information.
p3 <- ggplot(data,aes(ceiling(Ratings))) + geom_bar(aes(fill=Website))
print(p3)
readline(prompt="Press [Enter] to generate the next plot.")
#Plot histogram of Rating, w Website info and faceted in quarters
p4 <- ggplot(data,aes(ceiling(Ratings))) + geom_bar(aes(fill=Website)) + facet_grid(.~YearQuarters)
print(p4)
readline(prompt="Press [Enter] to continue.")
#Create subsets of data for "good" and "bad" ratings.
dataBad <- data %>% subset(Ratings <= 3)
dataGood <- data %>% subset(Ratings > 3)
#Print ratios of bad and good ratings for this year.
print(paste("The percentage of 'bad' ratings in",YearVal,"is: ",auxdf$ratioBadRating[auxdf$Year==YearVal]))
print(paste("The percentage of 'good' ratings in",YearVal,"is: ", auxdf$ratioGoodRating[auxdf$Year==YearVal]))
cat("\n")
readline(prompt="Press [Enter] to begin text analysis.")
#Run text analysis on full, bad, and good data sets
data_wA <- WordCloudAnalysis(data)
dataBad_wA <- WordCloudAnalysis(dataBad)
dataGood_wA <- WordCloudAnalysis(dataGood)
#Print the most common words from the different data sets.
print("Most frequent words from all reviews: ")
print(head(data_wA$wordFreq))
cat("\n")
print("Most frequent words from 'bad' reviews: ")
print(head(dataBad_wA$wordFreq))
cat("\n")
print("Most frequent words from 'good' reviews: ")
print(head(dataGood_wA$wordFreq))
cat("\n")
readline(prompt="Press [Enter] to generate word cloud:")
# Plot word clouds
print("Plotting word cloud for 'bad' reviews." )
wordcloud(dataBad_wA$Corpus, max.words=200, random.order=F)
cat("\n")
readline(prompt="Press [Enter] to continue.")
print("Plotting word cloud for 'good' reviews." )
cat("\n")
wordcloud(dataGood_wA$Corpus, max.words=200, random.order=F)
}
yearVec <- sort(unique(as.numeric(CapstoneDF$Year)))
ratioBad <- numeric(length(yearVec))
ratioGood <- numeric(length(yearVec))
meanVec <- numeric(length(yearVec))
revNum <- numeric(length(yearVec))
auxData <- data_frame(Year=yearVec, MeanRating=meanVec, ReviewNum=revNum, ratioBadRating=ratioBad, ratioGoodRating=ratioGood)
for(i in 1:length(yearVec)){
data <- CapstoneDF %>% subset(Year==yearVec[i])
auxData$MeanRating[i] <- mean(data$Ratings)
auxData$ReviewNum[i] <- dim(data)[1]
dataBad <- data %>% subset(Ratings <= 3)
dataGood <- data %>% subset(Ratings > 3)
auxData$ratioBadRating[i] <- dim(dataBad)[1]/dim(data)[1]
auxData$ratioGoodRating[i] <- dim(dataGood)[1]/dim(data)[1]
}
auxData
ggplot(auxData, aes(x=Year, y=ratioGoodRating)) +
geom_line() +
geom_line(aes(x=Year, y=ratioBadRating))
ggplot(auxData, aes(x=Year, y=ratioGoodRating)) +
geom_point() +
geom_line(aes(x=Year, y=ratioBadRating))
percentData
YearAnalysis(CapstoneDF, auxData, 2013)
