DatesTripAd1 <- c(DatesTripAd1, DatesNew1)
DatesTripAd2 <- c(DatesTripAd2, DatesNew2)
#Increment page count
ReviewCount <- ReviewCount+1
}
DatesTripAd1
DatesTripAd2
RatingsTripAd <- character(0)
DatesTripAd1 <- character(0)
DatesTripAd2 <- character(0)
flag <- 1
while(flag==1){
print(paste("Scraping Trip Advisor page",ReviewCount))
#For the first page, the URL we want to use is jsut the base URL. For subsequent
#iterations, we want to grab the hyperlink to the new page from the page links
#in the previous page. E.g. page 1 carries a link to page 2 in its HTML.
if(ReviewCount == 1){
page_url <- BaseURL_TripAd
} else {
#Grab the page numbers for the links
pagenum <- read_html(page_url) %>% html_nodes(".pageNum") %>% html_attr("data-page-number") %>% as.numeric()
#Grab the hyperlinks for the following pages
hyperlink <- read_html(page_url) %>% html_nodes(".pageNum") %>% html_attr("href") %>% as.character()
page_url <- paste("https://www.tripadvisor.ca",hyperlink[pagenum==ReviewCount],sep="")
}
#Read in reviews and ratings from current page
ReviewsNew <- read_html(page_url) %>% html_nodes("#REVIEWS p") %>% html_text()
RatingsNew <- read_html(page_url) %>% html_nodes("#REVIEWS .rating_s_fill") %>% html_attr("alt")
DatesNew1 <- read_html(page_url) %>% html_node(".relativeDate") %>% html_attr("title",default=NA_character_)
DatesNew2 <- read_html(page_url) %>% html_nodes(".ratingDate") %>% html_text()
#End loop condition
flag <- if(length(ReviewsNew)==0){0} else {1}
#Append new reviews/ratings
ReviewsTripAd <- c(ReviewsTripAd, ReviewsNew)
RatingsTripAd <- c(RatingsTripAd, RatingsNew)
DatesTripAd1 <- c(DatesTripAd1, DatesNew1)
DatesTripAd2 <- c(DatesTripAd2, DatesNew2)
#Increment page count
ReviewCount <- ReviewCount+1
}
DatesTripAd1
while(flag==1){
print(paste("Scraping Trip Advisor page",ReviewCount))
#For the first page, the URL we want to use is jsut the base URL. For subsequent
#iterations, we want to grab the hyperlink to the new page from the page links
#in the previous page. E.g. page 1 carries a link to page 2 in its HTML.
if(ReviewCount == 1){
page_url <- BaseURL_TripAd
} else {
#Grab the page numbers for the links
pagenum <- read_html(page_url) %>% html_nodes(".pageNum") %>% html_attr("data-page-number") %>% as.numeric()
#Grab the hyperlinks for the following pages
hyperlink <- read_html(page_url) %>% html_nodes(".pageNum") %>% html_attr("href") %>% as.character()
page_url <- paste("https://www.tripadvisor.ca",hyperlink[pagenum==ReviewCount],sep="")
}
#Read in reviews and ratings from current page
ReviewsNew <- read_html(page_url) %>% html_nodes("#REVIEWS p") %>% html_text()
RatingsNew <- read_html(page_url) %>% html_nodes("#REVIEWS .rating_s_fill") %>% html_attr("alt")
DatesNew1 <- read_html(page_url) %>% html_nodes(".relativeDate") %>% html_attr("title",default=NA_character_)
DatesNew2 <- read_html(page_url) %>% html_nodes(".ratingDate") %>% html_text()
#End loop condition
flag <- if(length(ReviewsNew)==0){0} else {1}
#Append new reviews/ratings
ReviewsTripAd <- c(ReviewsTripAd, ReviewsNew)
RatingsTripAd <- c(RatingsTripAd, RatingsNew)
DatesTripAd1 <- c(DatesTripAd1, DatesNew1)
DatesTripAd2 <- c(DatesTripAd2, DatesNew2)
#Increment page count
ReviewCount <- ReviewCount+1
}
DatesTripAd1
quit("no")
suppressMessages(library(rvest))
YelpURL <- "https://www.yelp.ca/biz/reds-midtown-tavern-toronto-2"
YelpURL_data <-read_html(YelpURL)
print(YelpURL_data)
length(YelpURL_data)
YelpURL_data[2]
YelpReviews <- html_nodes(YelpURL_data)
YelpReviews <- html_nodes(YelpURL_data, ".review-content p")
YelpReviews
head(YelpReviews)
head(as.character(YelpReviews))
YelpReviews_char1 <- as.character(YelpReviews)
head(YelpReviews_char1)
head(YelpReviews_char1, n=2)
YelpReviews_char2 <- html_text(YelpReviews)
head(YelpReviews, n=2)
head(YelpReviews_char2, n=2)
head(YelpReviews)
html_attrs(YelpReviews)
html_attrs(YelpReviews, "lang")
html_attrs(YelpReviews, lang)
html_attrs(YelpReviews, "en")
?html_attrs
html_attr(YelpReviews, "en")
html_attr(YelpReviews, "lang")
html_attr(YelpReviews, "lang")
html_attrs(YelpReviews)
head(html_attrs(YelpReviews))
head(html_attr(YelpReviews, "lang"))
YelpRatings <- html_nodes(YelpURL_data, ".rating-large"")
YelpRatings <- html_nodes(YelpURL_data, ".rating-large")
YelpRatings <- html_nodes(YelpURL_data, ".rating-large")
YelpRatings
as.character(YelpRatings)[1]
html_attrs(YelpRatings)
YelpRatings <- html_nodes(YelpURL_data, ".rating-large img")
as.character(YelpRatings)[1]
```{r}
html_attrs(YelpRatings)
YelpRatings <- html_nodes(YelpURL_data, ".rating-large")
html_attrs(YelpRatings)
head(html_attrs(YelpRatings))
YelpRatings_clean <- html_attr(YelpRatings, "title")
head(YelpRatings_clean)
head(html_attrs(YelpReviews), n=3)
class(html_attrs(YelpReviews))
class(html_attr(YelpReviews, "lang"))
head(html_attrs(YelpRatings), n=3)
rm(list=ls())
suppressMessages(library(rvest))
suppressMessages(library(dplyr))
suppressMessages(library(dplyr))
library(tidyr)
suppressMessages(library(readr))
head(CapstoneDF$Dates, n=50)
head(subset(CapstoneDF$Dates, CapstoneDF$Website=="TripAdvisor"),n=20)
CapstoneDir = "/Users/Antoine/Documents/Work/DataScience/Springboard/FoundationsofDataScience/CapstoneProject"
CapstoneDir = "/Users/Antoine/Documents/Work/DataScience/Springboard/FoundationsofDataScience/CapstoneProject"
setwd(CapstoneDir)
rm(list=ls())
CapstoneDir = "/Users/Antoine/Documents/Work/DataScience/Springboard/FoundationsofDataScience/CapstoneProject"
setwd(CapstoneDir)
rm(list=ls())
devtools::install_github("rstudio/rmarkdown")
rm(list=ls())
WordCloudAnalysis <- function(dataset){
dataset$Reviews <- gsub("[Tt]he", "", dataset$Reviews)
dataCorpus <- dataset$Reviews %>% VectorSource() %>% Corpus()
dataCorpus <- dataCorpus %>% tm_map(removePunctuation) %>% tm_map(removeWords, stopwords("english"))
TDM <- TermDocumentMatrix(dataCorpus) %>% as.matrix()
wFreqs = sort(rowSums(TDM), decreasing=TRUE)
return(list("Corpus" = dataCorpus, "TDM"=TDM, "wordFreq"=wFreqs))
}
YearAnalysis <- function(df, YearVal){
data <- df %>% subset(Year==YearVal)
print(paste("Here is a summary of the", YearVal, "data frame:"))
cat("\n")
print(head(data[-1]))
cat("\n")
print(str(data))
cat("\n")
print(paste("The mean value of Ratings for", YearVal, "is: ", auxData$MeanRating[auxData$Year==YearVal]))
cat("\n")
readline(prompt="Press [Enter] to begin plotting.")
p1 <- ggplot(data,aes(x=YearQuarters, y=Ratings)) + stat_summary(fun.y=mean, geom="point")
print(p1)
readline(prompt="Press [Enter] to generate the next plot.")
p2 <- ggplot(data,aes(x=YearMonth, y=Ratings, col=YearQuarters)) + stat_summary(fun.y=mean, geom="point")
print(p2)
readline(prompt="Press [Enter] to generate the next plot.")
p3 <- ggplot(data,aes(ceiling(Ratings))) + geom_bar(aes(fill=Website))
print(p3)
readline(prompt="Press [Enter] to generate the next plot.")
p4 <- ggplot(data,aes(ceiling(Ratings))) + geom_bar(aes(fill=Website)) + facet_grid(.~YearQuarters)
print(p4)
readline(prompt="Press [Enter] to continue.")
dataBad <- data %>% subset(Ratings <= 3)
dataGood <- data %>% subset(Ratings > 3)
print(paste("The percentage of 'bad' ratings in",YearVal,"is: ",auxData$ratioBadRating[auxData$Year==YearVal]))
print(paste("The percentage of 'good' ratings in",YearVal,"is: ", auxData$ratioGoodRating[auxData$Year==YearVal]))
cat("\n")
readline(prompt="Press [Enter] to begin text analysis.")
data_wA <- WordCloudAnalysis(data)
dataBad_wA <- WordCloudAnalysis(dataBad)
dataGood_wA <- WordCloudAnalysis(dataGood)
print("Most frequent words from all reviews: ")
print(head(data_wA$wordFreq))
cat("\n")
print("Most frequent words from 'bad' reviews: ")
print(head(dataBad_wA$wordFreq))
cat("\n")
print("Most frequent words from 'good' reviews: ")
print(head(dataGood_wA$wordFreq))
cat("\n")
readline(prompt="Press [Enter] to generate word cloud:")
print("Plotting word cloud for 'bad' reviews." )
wordcloud(dataBad_wA$Corpus, max.words=200, random.order=F)
cat("\n")
readline(prompt="Press [Enter] to continue.")
print("Plotting word cloud for 'good' reviews." )
cat("\n")
wordcloud(dataGood_wA$Corpus, max.words=200, random.order=F)
}
rm(list=ls())
WordCloudAnalysis <- function(dataset){
#Remove "The" or "the"  from reviews, since the tm_map() function below doesn't do it.
dataset$Reviews <- gsub("[Tt]he", "", dataset$Reviews)
#Create corpus from the text data
dataCorpus <- dataset$Reviews %>% VectorSource() %>% Corpus()
#Remove punctuation and english stopwords from text data
dataCorpus <- dataCorpus %>% tm_map(removePunctuation) %>% tm_map(removeWords, stopwords("english"))
#Create term document matrix and convert to matrix class.
TDM <- TermDocumentMatrix(dataCorpus) %>% as.matrix()
#Compute word frequencies from TDM.
wFreqs = sort(rowSums(TDM), decreasing=TRUE)
return(list("Corpus" = dataCorpus, "TDM"=TDM, "wordFreq"=wFreqs))
}
YearAnalysis <- function(df, YearVal){
#Subset the data to obtain the desired year.
data <- df %>% subset(Year==YearVal)
print(paste("Here is a summary of the", YearVal, "data frame:"))
#Some summary output
cat("\n")
print(head(data[-1]))
cat("\n")
print(str(data))
cat("\n")
# Print mean value of ratings for that year
print(paste("The mean value of Ratings for", YearVal, "is: ", auxData$MeanRating[auxData$Year==YearVal]))
cat("\n")
readline(prompt="Press [Enter] to begin plotting.")
#Plot scatter plot of Ratings in the year, aggregated at the level of quarters
p1 <- ggplot(data,aes(x=YearQuarters, y=Ratings)) + stat_summary(fun.y=mean, geom="point")
print(p1)
readline(prompt="Press [Enter] to generate the next plot.")
#Plot scatter plot of Ratings in the year, aggregated at the level of months.
p2 <- ggplot(data,aes(x=YearMonth, y=Ratings, col=YearQuarters)) + stat_summary(fun.y=mean, geom="point")
print(p2)
readline(prompt="Press [Enter] to generate the next plot.")
#Plot histogram of Ratings, with Website information.
p3 <- ggplot(data,aes(ceiling(Ratings))) + geom_bar(aes(fill=Website))
print(p3)
readline(prompt="Press [Enter] to generate the next plot.")
#Plot histogram of Rating, w Website info and faceted in quarters
p4 <- ggplot(data,aes(ceiling(Ratings))) + geom_bar(aes(fill=Website)) + facet_grid(.~YearQuarters)
print(p4)
readline(prompt="Press [Enter] to continue.")
#Create subsets of data for "good" and "bad" ratings.
dataBad <- data %>% subset(Ratings <= 3)
dataGood <- data %>% subset(Ratings > 3)
#Print ratios of bad and good ratings for this year.
print(paste("The percentage of 'bad' ratings in",YearVal,"is: ",auxData$ratioBadRating[auxData$Year==YearVal]))
print(paste("The percentage of 'good' ratings in",YearVal,"is: ", auxData$ratioGoodRating[auxData$Year==YearVal]))
cat("\n")
readline(prompt="Press [Enter] to begin text analysis.")
#Run text analysis on full, bad, and good data sets
data_wA <- WordCloudAnalysis(data)
dataBad_wA <- WordCloudAnalysis(dataBad)
dataGood_wA <- WordCloudAnalysis(dataGood)
#Print the most common words from the different data sets.
print("Most frequent words from all reviews: ")
print(head(data_wA$wordFreq))
cat("\n")
print("Most frequent words from 'bad' reviews: ")
print(head(dataBad_wA$wordFreq))
cat("\n")
print("Most frequent words from 'good' reviews: ")
print(head(dataGood_wA$wordFreq))
cat("\n")
readline(prompt="Press [Enter] to generate word cloud:")
# Plot word clouds
print("Plotting word cloud for 'bad' reviews." )
wordcloud(dataBad_wA$Corpus, max.words=200, random.order=F)
cat("\n")
readline(prompt="Press [Enter] to continue.")
print("Plotting word cloud for 'good' reviews." )
cat("\n")
wordcloud(dataGood_wA$Corpus, max.words=200, random.order=F)
}
CapstoneDir = "/Users/Antoine/Documents/Work/DataScience/Springboard/FoundationsofDataScience/CapstoneProject"
setwd(CapstoneDir)
library(readr)
library(dplyr)
library(tidyr)
library(tm)
library(wordcloud)
library(ggplot2)
CapstoneDF <- read_csv("./Data/CapstoneCleanData.csv")
str(CapstoneDF)
summary(CapstoneDF)
dim(CapstoneDF)
CapstoneDF <- CapstoneDF  %>% mutate(Quarters = quarters.Date(Dates))
CapstoneDF <- CapstoneDF %>% separate(Dates, c("Year","Month","Day"))
tempdf <- CapstoneDF %>% unite("YearMonth", Year, Month, sep="-")
CapstoneDF$YearMonth <- tempdf$YearMonth
tempdf <- CapstoneDF %>% unite("YearQuarters", Year, Quarters, sep="-")
CapstoneDF$YearQuarters <- tempdf$YearQuarters
CapstoneDF$Website <- factor(CapstoneDF$Website)
CapstoneDF$Quarters <- factor(CapstoneDF$Quarters)
head(CapstoneDF[-1])
mean(CapstoneDF$Ratings)
ggplot(CapstoneDF, aes(x=Year, y=Ratings)) +
stat_summary(fun.y=mean, geom="point")
mean(CapstoneDF$Ratings)
global_p1 <- ggplot(CapstoneDF, aes(x=Year, y=Ratings)) + stat_summary(fun.y=mean, geom="point")
ggsave(filename="./Plots/global_YearRatings.png",global_p1)
?ggsave
width=10.0
height=10.0
wd=10.0
ht=10.0
global_p1 <- ggplot(CapstoneDF, aes(x=Year, y=Ratings)) + stat_summary(fun.y=mean, geom="point")
ggsave(filename="./Plots/global_YearRatings.png",global_p1, width=wd, height=ht)
wd=10.0
ht=10.0
wd=10.0
ht=10.0
mean(CapstoneDF$Ratings)
global_p1 <- ggplot(CapstoneDF, aes(x=Year, y=Ratings)) + stat_summary(fun.y=mean, geom="point")
ggsave(filename="./Plots/global_YearRatings.png",global_p1, width=wd, height=ht)
global_p2 <- ggplot(CapstoneDF, aes(x=YearQuarters, y=Ratings)) + stat_summary(fun.y=mean, geom="point") #+ stat_summary(fun.data=mean_sdl, fun.args=list(mult=1))
ggsave(filename="./Plots/global_YearQuartersRatings",global_p2,width=wd,height=ht)
global_p3 <- ggplot(CapstoneDF, aes(x=YearMonth, y=Ratings)) + stat_summary(fun.y=mean, geom="point")
ggsave(filename="./Plots/global_YearMonthRatings",global_p3, width=wd, height=ht)
global_p4 <- ggplot(CapstoneDF, aes(ceiling(Ratings))) + geom_bar(aes(fill=Website))
ggsave(filename="./Plots/global_RatingsHist", global_p4, width=wd, height=ht)
global_p5<-ggplot(CapstoneDF, aes(Website)) + geom_bar()
ggsave(filename="./Plots/global_Website", global_p5, width=wd, height=ht)
wd=10.0
ht=10.0
mean(CapstoneDF$Ratings)
global_p1 <- ggplot(CapstoneDF, aes(x=Year, y=Ratings)) + stat_summary(fun.y=mean, geom="point")
ggsave(filename="./Plots/global_YearRatings.png",global_p1, width=wd, height=ht)
global_p2 <- ggplot(CapstoneDF, aes(x=YearQuarters, y=Ratings)) + stat_summary(fun.y=mean, geom="point") #+ stat_summary(fun.data=mean_sdl, fun.args=list(mult=1))
ggsave(filename="./Plots/global_YearQuartersRatings.png",global_p2,width=wd,height=ht)
global_p3 <- ggplot(CapstoneDF, aes(x=YearMonth, y=Ratings)) + stat_summary(fun.y=mean, geom="point")
ggsave(filename="./Plots/global_YearMonthRatings.png",global_p3, width=wd, height=ht)
global_p4 <- ggplot(CapstoneDF, aes(ceiling(Ratings))) + geom_bar(aes(fill=Website))
ggsave(filename="./Plots/global_RatingsHist.png", global_p4, width=wd, height=ht)
global_p5<-ggplot(CapstoneDF, aes(Website)) + geom_bar()
ggsave(filename="./Plots/global_Website.png", global_p5, width=wd, height=ht)
wd=10.0
ht=10.0
mean(CapstoneDF$Ratings)
global_p1 <- ggplot(CapstoneDF, aes(x=Year, y=Ratings)) + stat_summary(fun.y=mean, geom="point")
ggsave(filename="./Plots/global_YearRatings.png",global_p1, width=wd, height=ht)
global_p2 <- ggplot(CapstoneDF, aes(x=YearQuarters, y=Ratings)) + stat_summary(fun.y=mean, geom="point") #+ stat_summary(fun.data=mean_sdl, fun.args=list(mult=1))
ggsave(filename="./Plots/global_YearQuartersRatings.png",global_p2,width=wd,height=ht)
global_p3 <- ggplot(CapstoneDF, aes(x=YearMonth, y=Ratings)) + stat_summary(fun.y=mean, geom="point")
ggsave(filename="./Plots/global_YearMonthRatings.png",global_p3, width=wd, height=ht)
global_p4 <- ggplot(CapstoneDF, aes(ceiling(Ratings))) + geom_bar(aes(fill=Website))
ggsave(filename="./Plots/global_RatingsHist.png", global_p4, width=wd, height=ht)
global_p5<-ggplot(CapstoneDF, aes(Website)) + geom_bar()
ggsave(filename="./Plots/global_Website.png", global_p5, width=wd, height=ht)
global_p6 <- ggplot(CapstoneDF, aes(ceiling(Ratings))) + geom_bar() + facet_grid(.~Year)
ggsave(filename="./Plots/global_RatingsYearHist.png", global_p6, width=wt, height=ht)
global_p7 <- ggplot(CapstoneDF, aes(Website)) + geom_bar() + facet_grid(.~Year)
ggsave(filename="./Plots/global_WebsiteYearHist.png", global_p7, width=wt, height=ht)
global_p6 <- ggplot(CapstoneDF, aes(ceiling(Ratings))) + geom_bar() + facet_grid(.~Year)
ggsave(filename="./Plots/global_RatingsYearHist.png", global_p6, width=wd, height=ht)
global_p7 <- ggplot(CapstoneDF, aes(Website)) + geom_bar() + facet_grid(.~Year)
ggsave(filename="./Plots/global_WebsiteYearHist.png", global_p7, width=wd, height=ht)
global_p8 <- ggplot(CapstoneDF, aes(ceiling(Ratings))) + geom_bar() + facet_grid(.~Website)
ggsave(filename="./Plots/global_RatingsWebsiteHist.png", global_p8, width=wd, height=ht)
?stat_summary
ggplot(CapstoneDF, aes(x=YearQuarters, y=Ratings)) + stat_summary(fun.y=mean, geom="point")
?stat_summary
ggplot(CapstoneDF, aes(x=YearQuarters, y=Ratings)) + stat_summary(fun.y=mean, geom="point") + stat_summary(aes(x=Year), geom="point"))
ggplot(CapstoneDF, aes(x=YearQuarters, y=Ratings)) + stat_summary(fun.y=mean, geom="point") + stat_summary(aes(x=Year), geom="point")
ggplot(CapstoneDF, aes(x=YearQuarters, y=Ratings)) + stat_summary(fun.y=mean, geom="point") + stat_summary(aes(x=Year), fun.y=mean, geom="point")
ggplot(CapstoneDF, aes(x=YearQuarters, y=Ratings)) + stat_summary(fun.y=mean, geom="point") + stat_summary(aes(x=Year), fun.y=mean, geom="point", colour="red")
ggplot(CapstoneDF, aes(x=YearQuarters, y=Ratings)) + stat_summary(fun.y=mean, geom="point") + stat_summary(aes(x=Year), fun.y=mean, geom="point", colour="red", width=0.5)
ggplot(CapstoneDF, aes(x=YearQuarters, y=Ratings)) + stat_summary(fun.y=mean, geom="point") + stat_summary(aes(x=Year), fun.y=mean, geom="point", colour="red", size=0.5)
ggplot(CapstoneDF, aes(x=YearQuarters, y=Ratings)) + stat_summary(fun.y=mean, geom="point") + stat_summary(aes(x=Year), fun.y=mean, geom="point", colour="red", size=2.0)
ggplot(CapstoneDF, aes(x=YearQuarters, y=Ratings)) + stat_summary(fun.y=mean, geom="point") + stat_summary(aes(x=Year), fun.y=mean, geom="point", colour="red", size=5.0)
ggplot(CapstoneDF, aes(x=YearQuarters, y=Ratings)) + stat_summary(fun.y=mean, geom="point") + stat_summary(aes(x=Year), fun.y=mean, geom="point", colour="red", size=4.0)
ggplot(CapstoneDF, aes(x=YearQuarters, y=Ratings))
+ stat_summary(fun.y=mean, geom="point")
ggplot(CapstoneDF, aes(x=YearQuarters, y=Ratings)) + stat_summary(fun.y=mean, geom="point")
ggplot(CapstoneDF, aes(x=YearQuarters, y=Ratings)) +
stat_summary(fun.y=mean, geom="point")+
stat_summary(aes(x=Year), fun.y=mean, geom="point", colour="red", size=4.0, position="jitter")
ggplot(CapstoneDF, aes(x=YearQuarters, y=Ratings)) +
stat_summary(fun.y=mean, geom="point")+
stat_summary(aes(x=Year), fun.y=mean, geom="point", colour="red", size=4.0, position="dodge")
global_p1 <- ggplot(CapstoneDF, aes(x=Year, y=Ratings)) + stat_summary(fun.y=mean, geom="point") + coord_cartesian(ylim=c(2.5,4.5))
ggsave(filename="./Plots/global_YearRatings.png",global_p1, width=wd, height=ht)
global_p1 <- ggplot(CapstoneDF, aes(x=Year, y=Ratings)) +
stat_summary(fun.y=mean, geom="point") +
coord_cartesian(ylim=c(2.5,4.5))
ggsave(filename="./Plots/global_YearRatings.png",global_p1, width=wd, height=ht)
global_p2 <- ggplot(CapstoneDF, aes(x=YearQuarters, y=Ratings)) +
stat_summary(fun.y=mean, geom="point") +
coord_cartesian(ylim=c(2.5,4.5))
ggsave(filename="./Plots/global_YearQuartersRatings.png",global_p2,width=wd,height=ht)
global_p3 <- ggplot(CapstoneDF, aes(x=YearMonth, y=Ratings)) +
stat_summary(fun.y=mean, geom="point") +
coord_cartesian(ylim=c(2.5,4.5))
ggsave(filename="./Plots/global_YearMonthRatings.png",global_p3, width=wd, height=ht)
global_p3
?theme
?element_text
global_p3 <- ggplot(CapstoneDF, aes(x=YearMonth, y=Ratings)) +
stat_summary(fun.y=mean, geom="point") +
coord_cartesian(ylim=c(2.5,4.5)) +
theme(axis.text.x =element_text(angle=90))
global_p3
ggsave(filename="./Plots/global_YearMonthRatings.png",global_p3, width=wd, height=ht)
global_p3 <- ggplot(CapstoneDF, aes(x=YearMonth, y=Ratings, col=YearQuarters)) +
stat_summary(fun.y=mean, geom="point") +
coord_cartesian(ylim=c(2.5,4.5)) +
theme(axis.text.x =element_text(angle=90))
ggsave(filename="./Plots/global_YearMonthRatings.png",global_p3, width=wd, height=ht)
global_p2 <- ggplot(CapstoneDF, aes(x=YearQuarters, y=Ratings)) +
stat_summary(fun.y=mean, geom="point") +
stat_summary(fun.data=mean_sdl, fun.args=list(mult=1), position="identity") +
coord_cartesian(ylim=c(2.5,4.5))
ggsave(filename="./Plots/global_YearQuartersRatings.png",global_p2,width=wd,height=ht)
subset(CapstoneDF$Ratings, CapstoneDF$YearQuarters=="2014-Q1")
mean(subset(CapstoneDF$Ratings, CapstoneDF$YearQuarters=="2014-Q1"))
sd(subset(CapstoneDF$Ratings, CapstoneDF$YearQuarters=="2014-Q1"))
3.865+0.887
3.865-0.887
sd(subset(CapstoneDF$Ratings, CapstoneDF$YearQuarters=="2013-Q4"))
global_p2 <- ggplot(CapstoneDF, aes(x=YearQuarters, y=Ratings)) +
stat_summary(fun.y=mean, geom="point") +
coord_cartesian(ylim=c(2.5,4.5))
ggsave(filename="./Plots/global_YearQuartersRatings.png",global_p2,width=wd,height=ht)
global_p4 <- ggplot(CapstoneDF, aes(x=ceiling(Ratings), y=..density..)) + geom_bar(aes(fill=Website))
ggsave(filename="./Plots/global_RatingsHist.png", global_p4, width=wd, height=ht)
global_p4 <- ggplot(CapstoneDF, aes(x=ceiling(Ratings), y=..density..)) + geom_bar(aes(fill=Website))
ggsave(filename="./Plots/global_RatingsHist.png", global_p4, width=wd, height=ht)
global_p4
global_p4 <- ggplot(CapstoneDF, aes(x=ceiling(Ratings), y=..density..)) + geom_histogram(aes(fill=Website))
global_p4
global_p4 <- ggplot(CapstoneDF, aes(x=ceiling(Ratings), y=..density..)) + geom_histogram(aes(fill=Website), binwidth = 1)
global_p4
global_p4 <- ggplot(CapstoneDF, aes(x=ceiling(Ratings), y=..density..)) + geom_histogram(aes(fill=Website), binwidth = 1, position="fill")
global_p4
global_p4 <- ggplot(CapstoneDF, aes(x=ceiling(Ratings))) + geom_histogram(aes(fill=Website))
global_p4
global_p4 <- ggplot(CapstoneDF, aes(x=ceiling(Ratings))) + geom_bar(aes(fill=Website))
global_p4
ggsave(filename="./Plots/global_RatingsHist.png", global_p4, width=wd, height=ht)
global_p6 <- ggplot(CapstoneDF, aes(ceiling(Ratings), y=..density..)) + geom_histogram(binwidth=1) + facet_grid(.~Year)
ggsave(filename="./Plots/global_RatingsYearHist.png", global_p6, width=wd, height=ht)
global_p6 <- ggplot(CapstoneDF, aes(ceiling(Ratings), y=..density..)) + geom_histogram(binwidth=1) + facet_grid(.~Year)
ggsave(filename="./Plots/global_RatingsYearHist_dens.png", global_p6, width=wd, height=ht)
global_p6 <- ggplot(CapstoneDF, aes(ceiling(Ratings), y=..density..)) + geom_histogram(binwidth=1, col="black") + facet_grid(.~Year)
global_p6
global_p6 <- ggplot(CapstoneDF, aes(ceiling(Ratings), y=..density..)) + geom_histogram(binwidth=1, col="black", fill="white") + facet_grid(.~Year)
global_p6
global_p6 <- ggplot(CapstoneDF, aes(ceiling(Ratings), y=..density..)) + geom_histogram(binwidth=1, col="black") + facet_grid(.~Year)
global_p6
ggsave(filename="./Plots/global_RatingsYearHist_dens.png", global_p6, width=wd, height=ht)
global_p6 <- ggplot(CapstoneDF, aes(ceiling(Ratings), y=..density..)) + geom_histogram(binwidth=1, col="black", position="dodge") + facet_grid(.~Year)
global_p6
global_p6 <- ggplot(CapstoneDF, aes(ceiling(Ratings), y=..density..)) + geom_histogram(binwidth=1, col="black", position="jitter") + facet_grid(.~Year)
global_p6
global_p6 <- ggplot(CapstoneDF, aes(ceiling(Ratings), y=..density..)) + geom_histogram(binwidth=1, col="black") + facet_grid(.~Year)
global_p6
global_p6 <- ggplot(CapstoneDF, aes(ceiling(Ratings), y=..density.., fill=ceiling(Ratings))) +
geom_histogram(binwidth=1, col="black") +
facet_grid(.~Year)
global_p6
global_p6 <- ggplot(CapstoneDF, aes(ceiling(Ratings), y=..density..)) +
geom_histogram(binwidth=1, col="black", aes(fill=ceiling(Ratings))) +
facet_grid(.~Year)
global_p6
global_p6 <- ggplot(CapstoneDF, aes(ceiling(Ratings), y=..density..)) +
geom_histogram(binwidth=1, col="black", aes(fill=Ratings)) +
facet_grid(.~Year)
global_p6
global_p6 <- ggplot(CapstoneDF, aes(ceiling(Ratings), y=..density..)) +
geom_histogram(binwidth=1, aes(fill=Ratings)) +
facet_grid(.~Year)
global_p6
?geom_histogram
global_p6 <- ggplot(CapstoneDF, aes(ceiling(Ratings), y=..density..)) +
geom_histogram(binwidth=1,inheri.aes=FALSE, aes(fill=Ratings)) +
facet_grid(.~Year)
global_p6
global_p6 <- ggplot(CapstoneDF, aes(ceiling(Ratings), y=..density..)) +
geom_histogram(binwidth=1,inherit.aes=FALSE, aes(fill=Ratings)) +
facet_grid(.~Year)
global_p6
global_p6 <- ggplot(CapstoneDF, aes(ceiling(Ratings), y=..density..)) +
geom_histogram(binwidth=1, col="black") +
facet_grid(.~Year)
global_p6
ggplot(CapstoneDF, aes(ceiling(Ratings))) + geom_bar(aes(y=..count../sum(..count..)))
ggplot(CapstoneDF, aes(ceiling(Ratings))) + geom_bar(aes(y=..count../sum(..count..),fill=ceiling(Ratings)))
ggplot(CapstoneDF, aes(ceiling(Ratings), fill=ceiling(Ratings))) + geom_bar(aes(y=..count../sum(..count..)))
ggplot(CapstoneDF, aes(x=ceiling(Ratings), fill=ceiling(Ratings))) + geom_bar(aes(y=..count../sum(..count..)))
ggplot(CapstoneDF, aes(x=ceiling(Ratings), fill=ceiling(Ratings))) + geom_bar(aes(y=..count../sum(..count..)), col=Ratings)
ggplot(CapstoneDF, aes(x=ceiling(Ratings), fill=ceiling(Ratings))) + geom_bar(aes(y=..count../sum(..count..), col=Ratings))
global_p7 <- ggplot(CapstoneDF, aes(Website)) +
geom_bar() +
facet_grid(.~Year) +
coord_cartesian(axis.text.x = element_text(angle=90))
ggsave(filename="./Plots/global_WebsiteYearHist.png", global_p7, width=wd, height=ht)
ggsave(filename="./Plots/global_WebsiteYearHist.png", global_p7, width=wd, height=ht)
global_p7 <- ggplot(CapstoneDF, aes(Website)) +
geom_bar() +
facet_grid(.~Year) +
theme(axis.text.x =element_text(angle=90))
ggsave(filename="./Plots/global_WebsiteYearHist.png", global_p7, width=wd, height=ht)
CapstoneDF <- read_csv("./Data/CapstoneCleanData.csv")
CapstoneDir = "/Users/Antoine/Documents/Work/DataScience/Springboard/FoundationsofDataScience/CapstoneProject"
setwd(CapstoneDir)
library(readr)
library(dplyr)
library(tidyr)
library(tm)
library(wordcloud)
library(ggplot2)
CapstoneDF <- read_csv("./Data/CapstoneCleanData.csv")
str(CapstoneDF)
summary(CapstoneDF)
dim(CapstoneDF)
