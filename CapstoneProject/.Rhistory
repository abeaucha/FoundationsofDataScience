PrevRevYelp[1:40]
BaseURL_OpenTable <- "https://www.opentable.com/reds-midtown-tavern?covers=2&dateTime=2017-02-22+19%3A00%23reviews&page="
ReviewCount <- 1
ReviewsOpenTable <- character(0)
RatingsOpenTable <- character(0)
DatesOpenTable <- character(0)
flag <- 1
while(flag==1) {
#Get URL for current page
page_url <- paste(BaseURL_OpenTable,as.character(ReviewCount),sep="")
#Obtain ratings/reviews from page
ReviewsNew <- read_html(page_url) %>% html_nodes("#reviews-results .review-content") %>% html_text
RatingsNew <- read_html(page_url) %>% html_nodes("#reviews-results .filled") %>% html_attr("title")
DatesOpenTableNew <- read_html(page_url) %>% html_nodes(".review-meta-separator+ .color-light") %>% html_text()
#Append ratings/reviews
ReviewsOpenTable <- c(ReviewsOpenTable,ReviewsNew)
RatingsOpenTable <- c(RatingsOpenTable,RatingsNew)
DatesOpenTable <- c(DatesOpenTable,DatesOpenTableNew)
print(paste("Scraping OpenTable page",ReviewCount))
#Increment counter
ReviewCount <- ReviewCount+1
#This condition checks whether we have reached the end of the reviews
flag <- if(length(ReviewsNew)==0){0} else {1}
}
DatesOpenTable[1:20]
Sys.time()
sys.date()
sys.Date()
?sys
Sys.Date()
DatesOpenTable[1:40]
LandingURL_TripAd <- "https://www.tripadvisor.ca/Restaurant_Review-g155019-d5058760-Reviews-Reds_Midtown_Tavern-Toronto_Ontario.html"
ReviewTitleLink <- read_html(LandingURL_TripAd) %>% html_nodes(".quote a") %>% html_attr("href")
BaseURL_TripAd <- paste("https://www.tripadvisor.ca",ReviewTitleLink[1],sep="")
ReviewCount <- 1
ReviewsTripAd <- character(0)
RatingsTripAd <- character(0)
DatesTripAd <- character(0)
flag <- 1
while(flag==1){
print(paste("Scraping Trip Advisor page",ReviewCount))
#For the first page, the URL we want to use is jsut the base URL. For subsequent
#iterations, we want to grab the hyperlink to the new page from the page links
#in the previous page. E.g. page 1 carries a link to page 2 in its HTML.
if(ReviewCount == 1){
page_url <- BaseURL_TripAd
} else {
#Grab the page numbers for the links
pagenum <- read_html(page_url) %>% html_nodes(".pageNum") %>% html_attr("data-page-number") %>% as.numeric()
#Grab the hyperlinks for the following pages
hyperlink <- read_html(page_url) %>% html_nodes(".pageNum") %>% html_attr("href") %>% as.character()
print(paste("Scraping Trip Advisor page",ReviewCount))
page_url <- paste("https://www.tripadvisor.ca",hyperlink[pagenum==ReviewCount],sep="")
}
#Read in reviews and ratings from current page
ReviewsNew <- read_html(page_url) %>% html_nodes("#REVIEWS p") %>% html_text()
RatingsNew <- read_html(page_url) %>% html_nodes("#REVIEWS .rating_s_fill") %>% html_attr("alt")
DatesNew <- read_html(page_url) %>% html_nodes(".relativeDate") %>% html_attr("content")
#End loop condition
flag <- if(length(ReviewsNew)==0){0} else {1}
#Append new reviews/ratings
ReviewsTripAd <- c(ReviewsTripAd, ReviewsNew)
RatingsTripAd <- c(RatingsTripAd, RatingsNew)
DatesTripAd <- c(DatesTripAd, DatesNew)
#Increment page count
ReviewCount <- ReviewCount+1
}
DatesTripAd
test <- read_html("https://www.tripadvisor.ca/ShowUserReviews-g155019-d5058760-r456753642-Reds_Midtown_Tavern-Toronto_Ontario.html#REVIEWS") %>% html_nodes(".relativeDate")
test
LandingURL_TripAd <- "https://www.tripadvisor.ca/Restaurant_Review-g155019-d5058760-Reviews-Reds_Midtown_Tavern-Toronto_Ontario.html"
ReviewTitleLink <- read_html(LandingURL_TripAd) %>% html_nodes(".quote a") %>% html_attr("href")
BaseURL_TripAd <- paste("https://www.tripadvisor.ca",ReviewTitleLink[1],sep="")
ReviewCount <- 1
ReviewsTripAd <- character(0)
RatingsTripAd <- character(0)
DatesTripAd <- character(0)
flag <- 1
while(flag==1){
print(paste("Scraping Trip Advisor page",ReviewCount))
#For the first page, the URL we want to use is jsut the base URL. For subsequent
#iterations, we want to grab the hyperlink to the new page from the page links
#in the previous page. E.g. page 1 carries a link to page 2 in its HTML.
if(ReviewCount == 1){
page_url <- BaseURL_TripAd
} else {
#Grab the page numbers for the links
pagenum <- read_html(page_url) %>% html_nodes(".pageNum") %>% html_attr("data-page-number") %>% as.numeric()
#Grab the hyperlinks for the following pages
hyperlink <- read_html(page_url) %>% html_nodes(".pageNum") %>% html_attr("href") %>% as.character()
page_url <- paste("https://www.tripadvisor.ca",hyperlink[pagenum==ReviewCount],sep="")
}
#Read in reviews and ratings from current page
ReviewsNew <- read_html(page_url) %>% html_nodes("#REVIEWS p") %>% html_text()
RatingsNew <- read_html(page_url) %>% html_nodes("#REVIEWS .rating_s_fill") %>% html_attr("alt")
DatesNew <- read_html(page_url) %>% html_nodes(".relativeDate") %>% html_attr("title")
#End loop condition
flag <- if(length(ReviewsNew)==0){0} else {1}
#Append new reviews/ratings
ReviewsTripAd <- c(ReviewsTripAd, ReviewsNew)
RatingsTripAd <- c(RatingsTripAd, RatingsNew)
DatesTripAd <- c(DatesTripAd, DatesNew)
#Increment page count
ReviewCount <- ReviewCount+1
}
DatesTripAd
ReviewCount <- 1
ReviewsTripAd <- character(0)
RatingsTripAd <- character(0)
DatesTripAd <- character(0)
flag <- 1
while(flag==1){
print(paste("Scraping Trip Advisor page",ReviewCount))
#For the first page, the URL we want to use is jsut the base URL. For subsequent
#iterations, we want to grab the hyperlink to the new page from the page links
#in the previous page. E.g. page 1 carries a link to page 2 in its HTML.
if(ReviewCount == 1){
page_url <- BaseURL_TripAd
} else {
#Grab the page numbers for the links
pagenum <- read_html(page_url) %>% html_nodes(".pageNum") %>% html_attr("data-page-number") %>% as.numeric()
#Grab the hyperlinks for the following pages
hyperlink <- read_html(page_url) %>% html_nodes(".pageNum") %>% html_attr("href") %>% as.character()
page_url <- paste("https://www.tripadvisor.ca",hyperlink[pagenum==ReviewCount],sep="")
}
#Read in reviews and ratings from current page
ReviewsNew <- read_html(page_url) %>% html_nodes("#REVIEWS p") %>% html_text()
RatingsNew <- read_html(page_url) %>% html_nodes("#REVIEWS .rating_s_fill") %>% html_attr("alt")
DatesNew <- read_html(page_url) %>% html_nodes(".relativeDate") %>% html_attr("title")
print(DatesNew)
#End loop condition
flag <- if(length(ReviewsNew)==0){0} else {1}
#Append new reviews/ratings
ReviewsTripAd <- c(ReviewsTripAd, ReviewsNew)
RatingsTripAd <- c(RatingsTripAd, RatingsNew)
DatesTripAd <- c(DatesTripAd, DatesNew)
#Increment page count
ReviewCount <- ReviewCount+1
}
LandingURL_TripAd <- "https://www.tripadvisor.ca/Restaurant_Review-g155019-d5058760-Reviews-Reds_Midtown_Tavern-Toronto_Ontario.html"
ReviewTitleLink <- read_html(LandingURL_TripAd) %>% html_nodes(".quote a") %>% html_attr("href")
BaseURL_TripAd <- paste("https://www.tripadvisor.ca",ReviewTitleLink[1],sep="")
ReviewCount <- 1
ReviewsTripAd <- character(0)
RatingsTripAd <- character(0)
DatesTripAd1 <- character(0)
DatesTripAd2 <- character(0)
flag <- 1
while(flag==1){
print(paste("Scraping Trip Advisor page",ReviewCount))
#For the first page, the URL we want to use is jsut the base URL. For subsequent
#iterations, we want to grab the hyperlink to the new page from the page links
#in the previous page. E.g. page 1 carries a link to page 2 in its HTML.
if(ReviewCount == 1){
page_url <- BaseURL_TripAd
} else {
#Grab the page numbers for the links
pagenum <- read_html(page_url) %>% html_nodes(".pageNum") %>% html_attr("data-page-number") %>% as.numeric()
#Grab the hyperlinks for the following pages
hyperlink <- read_html(page_url) %>% html_nodes(".pageNum") %>% html_attr("href") %>% as.character()
page_url <- paste("https://www.tripadvisor.ca",hyperlink[pagenum==ReviewCount],sep="")
}
#Read in reviews and ratings from current page
ReviewsNew <- read_html(page_url) %>% html_nodes("#REVIEWS p") %>% html_text()
RatingsNew <- read_html(page_url) %>% html_nodes("#REVIEWS .rating_s_fill") %>% html_attr("alt")
DatesNew1 <- read_html(page_url) %>% html_nodes(".relativeDate") %>% html_attr("title")
DatesNew2 <- read_html(page_url) %>% html_nodes(".ratingeDate") %>% html_text()
#End loop condition
flag <- if(length(ReviewsNew)==0){0} else {1}
#Append new reviews/ratings
ReviewsTripAd <- c(ReviewsTripAd, ReviewsNew)
RatingsTripAd <- c(RatingsTripAd, RatingsNew)
DatesTripAd1 <- c(DatesTripAd1, DatesNew1)
DatesTripAd2 <- c(DatesTripAd2, DatesNew2)
#Increment page count
ReviewCount <- ReviewCount+1
}
DatesNew1
DatesNew1
DatesTripAd11
DatesTripAd1
DatesTripAd2
DatesTripAd2
BaseURL_TripAd <- paste("https://www.tripadvisor.ca",ReviewTitleLink[1],sep="")
ReviewCount <- 1
ReviewsTripAd <- character(0)
RatingsTripAd <- character(0)
DatesTripAd1 <- character(0)
DatesTripAd2 <- character(0)
flag <- 1
while(flag==1){
print(paste("Scraping Trip Advisor page",ReviewCount))
#For the first page, the URL we want to use is jsut the base URL. For subsequent
#iterations, we want to grab the hyperlink to the new page from the page links
#in the previous page. E.g. page 1 carries a link to page 2 in its HTML.
if(ReviewCount == 1){
page_url <- BaseURL_TripAd
} else {
#Grab the page numbers for the links
pagenum <- read_html(page_url) %>% html_nodes(".pageNum") %>% html_attr("data-page-number") %>% as.numeric()
#Grab the hyperlinks for the following pages
hyperlink <- read_html(page_url) %>% html_nodes(".pageNum") %>% html_attr("href") %>% as.character()
page_url <- paste("https://www.tripadvisor.ca",hyperlink[pagenum==ReviewCount],sep="")
}
#Read in reviews and ratings from current page
ReviewsNew <- read_html(page_url) %>% html_nodes("#REVIEWS p") %>% html_text()
RatingsNew <- read_html(page_url) %>% html_nodes("#REVIEWS .rating_s_fill") %>% html_attr("alt")
DatesNew1 <- read_html(page_url) %>% html_nodes(".relativeDate") %>% html_attr("title",default=NA_character_)
DatesNew2 <- read_html(page_url) %>% html_nodes(".ratingDate") %>% html_text()
#End loop condition
flag <- if(length(ReviewsNew)==0){0} else {1}
#Append new reviews/ratings
ReviewsTripAd <- c(ReviewsTripAd, ReviewsNew)
RatingsTripAd <- c(RatingsTripAd, RatingsNew)
DatesTripAd1 <- c(DatesTripAd1, DatesNew1)
DatesTripAd2 <- c(DatesTripAd2, DatesNew2)
#Increment page count
ReviewCount <- ReviewCount+1
}
DatesTripAd1
DatesTripAd2
RatingsTripAd <- character(0)
DatesTripAd1 <- character(0)
DatesTripAd2 <- character(0)
flag <- 1
while(flag==1){
print(paste("Scraping Trip Advisor page",ReviewCount))
#For the first page, the URL we want to use is jsut the base URL. For subsequent
#iterations, we want to grab the hyperlink to the new page from the page links
#in the previous page. E.g. page 1 carries a link to page 2 in its HTML.
if(ReviewCount == 1){
page_url <- BaseURL_TripAd
} else {
#Grab the page numbers for the links
pagenum <- read_html(page_url) %>% html_nodes(".pageNum") %>% html_attr("data-page-number") %>% as.numeric()
#Grab the hyperlinks for the following pages
hyperlink <- read_html(page_url) %>% html_nodes(".pageNum") %>% html_attr("href") %>% as.character()
page_url <- paste("https://www.tripadvisor.ca",hyperlink[pagenum==ReviewCount],sep="")
}
#Read in reviews and ratings from current page
ReviewsNew <- read_html(page_url) %>% html_nodes("#REVIEWS p") %>% html_text()
RatingsNew <- read_html(page_url) %>% html_nodes("#REVIEWS .rating_s_fill") %>% html_attr("alt")
DatesNew1 <- read_html(page_url) %>% html_node(".relativeDate") %>% html_attr("title",default=NA_character_)
DatesNew2 <- read_html(page_url) %>% html_nodes(".ratingDate") %>% html_text()
#End loop condition
flag <- if(length(ReviewsNew)==0){0} else {1}
#Append new reviews/ratings
ReviewsTripAd <- c(ReviewsTripAd, ReviewsNew)
RatingsTripAd <- c(RatingsTripAd, RatingsNew)
DatesTripAd1 <- c(DatesTripAd1, DatesNew1)
DatesTripAd2 <- c(DatesTripAd2, DatesNew2)
#Increment page count
ReviewCount <- ReviewCount+1
}
DatesTripAd1
while(flag==1){
print(paste("Scraping Trip Advisor page",ReviewCount))
#For the first page, the URL we want to use is jsut the base URL. For subsequent
#iterations, we want to grab the hyperlink to the new page from the page links
#in the previous page. E.g. page 1 carries a link to page 2 in its HTML.
if(ReviewCount == 1){
page_url <- BaseURL_TripAd
} else {
#Grab the page numbers for the links
pagenum <- read_html(page_url) %>% html_nodes(".pageNum") %>% html_attr("data-page-number") %>% as.numeric()
#Grab the hyperlinks for the following pages
hyperlink <- read_html(page_url) %>% html_nodes(".pageNum") %>% html_attr("href") %>% as.character()
page_url <- paste("https://www.tripadvisor.ca",hyperlink[pagenum==ReviewCount],sep="")
}
#Read in reviews and ratings from current page
ReviewsNew <- read_html(page_url) %>% html_nodes("#REVIEWS p") %>% html_text()
RatingsNew <- read_html(page_url) %>% html_nodes("#REVIEWS .rating_s_fill") %>% html_attr("alt")
DatesNew1 <- read_html(page_url) %>% html_nodes(".relativeDate") %>% html_attr("title",default=NA_character_)
DatesNew2 <- read_html(page_url) %>% html_nodes(".ratingDate") %>% html_text()
#End loop condition
flag <- if(length(ReviewsNew)==0){0} else {1}
#Append new reviews/ratings
ReviewsTripAd <- c(ReviewsTripAd, ReviewsNew)
RatingsTripAd <- c(RatingsTripAd, RatingsNew)
DatesTripAd1 <- c(DatesTripAd1, DatesNew1)
DatesTripAd2 <- c(DatesTripAd2, DatesNew2)
#Increment page count
ReviewCount <- ReviewCount+1
}
DatesTripAd1
quit("no")
suppressMessages(library(rvest))
YelpURL <- "https://www.yelp.ca/biz/reds-midtown-tavern-toronto-2"
YelpURL_data <-read_html(YelpURL)
print(YelpURL_data)
length(YelpURL_data)
YelpURL_data[2]
YelpReviews <- html_nodes(YelpURL_data)
YelpReviews <- html_nodes(YelpURL_data, ".review-content p")
YelpReviews
head(YelpReviews)
head(as.character(YelpReviews))
YelpReviews_char1 <- as.character(YelpReviews)
head(YelpReviews_char1)
head(YelpReviews_char1, n=2)
YelpReviews_char2 <- html_text(YelpReviews)
head(YelpReviews, n=2)
head(YelpReviews_char2, n=2)
head(YelpReviews)
html_attrs(YelpReviews)
html_attrs(YelpReviews, "lang")
html_attrs(YelpReviews, lang)
html_attrs(YelpReviews, "en")
?html_attrs
html_attr(YelpReviews, "en")
html_attr(YelpReviews, "lang")
html_attr(YelpReviews, "lang")
html_attrs(YelpReviews)
head(html_attrs(YelpReviews))
head(html_attr(YelpReviews, "lang"))
YelpRatings <- html_nodes(YelpURL_data, ".rating-large"")
YelpRatings <- html_nodes(YelpURL_data, ".rating-large")
YelpRatings <- html_nodes(YelpURL_data, ".rating-large")
YelpRatings
as.character(YelpRatings)[1]
html_attrs(YelpRatings)
YelpRatings <- html_nodes(YelpURL_data, ".rating-large img")
as.character(YelpRatings)[1]
```{r}
html_attrs(YelpRatings)
YelpRatings <- html_nodes(YelpURL_data, ".rating-large")
html_attrs(YelpRatings)
head(html_attrs(YelpRatings))
YelpRatings_clean <- html_attr(YelpRatings, "title")
head(YelpRatings_clean)
head(html_attrs(YelpReviews), n=3)
class(html_attrs(YelpReviews))
class(html_attr(YelpReviews, "lang"))
head(html_attrs(YelpRatings), n=3)
rm(list=ls())
suppressMessages(library(rvest))
suppressMessages(library(dplyr))
suppressMessages(library(dplyr))
library(tidyr)
suppressMessages(library(readr))
head(CapstoneDF$Dates, n=50)
head(subset(CapstoneDF$Dates, CapstoneDF$Website=="TripAdvisor"),n=20)
CapstoneDir = "/Users/Antoine/Documents/Work/DataScience/Springboard/FoundationsofDataScience/CapstoneProject"
CapstoneDir = "/Users/Antoine/Documents/Work/DataScience/Springboard/FoundationsofDataScience/CapstoneProject"
setwd(CapstoneDir)
rm(list=ls())
CapstoneDir = "/Users/Antoine/Documents/Work/DataScience/Springboard/FoundationsofDataScience/CapstoneProject"
setwd(CapstoneDir)
rm(list=ls())
devtools::install_github("rstudio/rmarkdown")
CapstoneDir = "/Users/Antoine/Documents/Work/DataScience/Springboard/FoundationsofDataScience/CapstoneProject"
setwd(CapstoneDir)
rm(list=ls())
library(readr)
library(dplyr)
library(tm)
library(wordcloud)
CapstoneDF <- read_csv("./Data/CapstoneCleanData.csv")
str(CapstoneDF)
library(ggplot2)
summary(CapstoneDF)
library(tidyr)
d1 <- CapstoneDF %>% arrange(Dates)
head(d1)
head(d1[2:4])
ggplot(d1, aes(x=Dates, y=Ratings)) + geom_point()
ggplot(d1, aes(x=Dates, y=Ratings)) + geom_line()
ggplot(d1, aes(x=Dates, y=Ratings)) + geom_point()
d2 <- CapstoneDF %>% separate(Dates, c("Y","m","d"))
head(d2[2:4])
head(d2[2:6])
d2 <- CapstoneDF %>% separate(Dates, c("Y","m","d")) %>% arrange(Y)
head(d2[2:6])
d2 <- CapstoneDF %>% separate(Dates, c("Y","m","d")) %>% arrange(Y, m)
head(d2[2:6])
head(d2[2:6]. n=20)
head(d2[2:6],n=20)
head(d2[2:6],n=50)
d2 <- CapstoneDF %>% separate(Dates, c("Year","Month","Day")) %>% arrange(Y, m)
d2 <- CapstoneDF %>% separate(Dates, c("Year","Month","Day")) %>% arrange(Year, Month)
head(d2[2:6],n=50)
head(d2[2:6],n=50)
View(d2)
d2 %>% group_by(Year,Month)
d2 %>% group_by(Year,Month) %>% summarise(avg=mean(Dates))
d2 %>% group_by(Year,Month) %>% summarise(avg=mean(Ratings))
d3 <- d2 %>% group_by(Year,Month) %>% summarise(AvgRatings=mean(Ratings))
head(d3,n=10)
d4 <- d3 %>% unite("Dates", Year, Month, sep="-")
head(d4)
ggplot(d4, aes(x=Dates,y=AvgRatings))
ggplot(d4, aes(x=Dates,y=AvgRatings)) + geom_point()
head(d2)
head(d2[2:4])
head(d2[2])
head(d2[2:])
head(d2[2:6])
d5 <- d2 %>% group_by(Year) %>% summarise(AvgRatings=mean(Ratings))
head(d5)
ggplot(d5, aes(x=Dates,y=AvgRatings)) + geom_point()
ggplot(d5, aes(x=Year,y=AvgRatings)) + geom_point()
ggplot(d5, aes(x=Year,y=AvgRatings)) + geom_line()
ggplot(d5, aes(x=Year,y=AvgRatings)) + geom_point()
head(d2[2:6])
head(CapstoneDF[2:4])
head(quarters.Date(CapstoneDF$Dates))
d6 <- CapstoneDF %>% mutate(Quarters = quarters.Date(Dates))
head(d6[-1])
d7 <- d6 %>% group_by(Year, Quarters) %>% summarise(AvgRatings = mean(Ratings))
head(d6[-1])
d6 <- d6 %>% separate(Dates, c("Year","Month","Day"))
head(d6[-1])
d7 <- d6 %>% group_by(Year, Quarters) %>% summarise(AvgRatings = mean(Ratings))
head(d7)
d7 <- d6 %>% group_by(Year, Quarters) %>% summarise(AvgRatings = mean(Ratings)) %>% unite("YearQuarter", Year, Quarters, sep="-")
head(d7)
ggplot(d7, aes(x=YearQuarter, y=AvgRatings)) + geom_line()
ggplot(d7, aes(x=YearQuarter, y=AvgRatings)) + geom_point()
rm(list=ls())
library(readr)
library(dplyr)
library(tidyr)
library(tm)
library(wordcloud)
library(ggplot2)
CapstoneDF <- read_csv("./Data/CapstoneCleanData.csv")
str(CapstoneDF)
summary(CapstoneDF)
d1 <- CapstoneDF %>% arrange(Dates)
head(d1[2:4])
d_byDate <- CapstoneDF %>% arrange(Dates)
head(d_byDate[2:4])
ggplot(d_byDate, aes(x=Dates, y=Ratings)) + geom_point()
d_byDay <- CapstoneDF %>% arrange(Dates)
head(d_byDay[2:4])
ggplot(d_byDay, aes(x=Dates, y=Ratings)) + geom_point()
d2 <- CapstoneDF %>% separate(Dates, c("Year","Month","Day")) %>% arrange(Year, Month)
head(d2[2:6],n=50)
d_Sep <- CapstoneDF %>% separate(Dates, c("Year","Month","Day")) %>% arrange(Year, Month)
head(d_Sep[2:6],n=50)
View(d_Sep)
d_DateSep <- CapstoneDF %>% separate(Dates, c("Year","Month","Day")) %>% arrange(Year, Month)
head(d_DateSep[2:6],n=50)
head(d_DateSep[2:6],n=20)
d_byMonth <- d_DateSep %>% group_by(Year,Month) %>% summarise(AvgRatings=mean(Ratings))
head(d_byMonth,n=10)
d_YearMonth <- d_byMonth %>% unite("Dates", Year, Month, sep="-")
d_YearMonth <- d_byMonth %>% unite("Dates", Year, Month, sep="-")
head(d_YearMonth)
ggplot(d_YearMonth, aes(x=Dates,y=AvgRatings)) + geom_point()
head(d_DateSep[2:6])
d_byYear <- d_DateSep %>% group_by(Year) %>% summarise(AvgRatings=mean(Ratings))
head(d_byYear)
ggplot(d_byYear, aes(x=Year,y=AvgRatings)) + geom_point()
d6 <- CapstoneDF %>% mutate(Quarters = quarters.Date(Dates))
head(d6[-1])
d_withQuarters <- d_withQuarters %>% separate(Dates, c("Year","Month","Day"))
head(d_withQuarters[-1])
d_withQuarters <- CapstoneDF %>% mutate(Quarters = quarters.Date(Dates))
head(d_withQuarters[-1])
d_withQuarters <- d_withQuarters %>% separate(Dates, c("Year","Month","Day"))
head(d_withQuarters[-1])
d_byQuarters <- d_withQuarters %>% group_by(Year, Quarters) %>% summarise(AvgRatings = mean(Ratings)) %>% unite("YearQuarter", Year, Quarters, sep="-")
head(d_byQuarters)
ggplot(d_byQuarters, aes(x=YearQuarter, y=AvgRatings)) + geom_point()
head(d_withQuarters[-1])
ggplot(d_byQuarters, aes(x=AvgRatings)) + geom_bar()
ggplot(d_byQuarters, aes(x=YearQuarter, y=AvgRatings)) + geom_point()
format(CapstoneDF$Dates, "%Y")
class(format(CapstoneDF$Dates, "%Y"))
as.Date(2015, "%Y")
as.Date("2015", "%Y")
as.Date("20150101", "%Y%m%d")
CapstoneDF$Dates >= as.Date("20150101", "%Y%m%d")
d_Recent <- subset(CapstoneDF, CapstoneDF$Dates >= as.Date("20150101", "%Y%m%d"))
head(d_Recent[-1])
dim(d_Recent)
View(d_Recent)
CapstoneDF$Dates >= as.Date("20160101", "%Y%m%d")
d_Recent <- subset(CapstoneDF, CapstoneDF$Dates >= as.Date("20150101", "%Y%m%d"))
dim(d_Recent)
View(d_Recent)
d_Recent <- subset(CapstoneDF, CapstoneDF$Dates >= as.Date("20160101", "%Y%m%d"))
dim(d_Recent)
View(d_Recent)
head(d_Recent[-1])
d_Recent %>% separate(Dates, c("Year", "Month", "Day"))
head(d_Recent %>% separate(Dates, c("Year", "Month", "Day"))[-1])
head(d_Recent %>% separate(Dates, c("Year", "Month", "Day")))
head(d_Recent %>% separate(Dates, c("Year", "Month", "Day")))[-1]
head(d_Recent %>% separate(Dates, c("Year", "Month", "Day")) %>% group_by(Year,Month)) [-1]
head(d_Recent %>% separate(Dates, c("Year", "Month", "Day")) %>% group_by(Year,Month) %>% summarise(AvgRatings=mean(Ratings))) [-1]
head(d_DateSep[2:6],n=20)
d_byMonth <- d_DateSep %>% group_by(Year,Month) %>% summarise(AvgRatings=mean(Ratings))
head(d_byMonth,n=10)
head(d_Recent %>% separate(Dates, c("Year", "Month", "Day")) %>% group_by(Year,Month) %>% summarise(AvgRatings=mean(Ratings)))
head(d_Recent %>% separate(Dates, c("Year", "Month", "Day")) %>% group_by(Year,Month) %>% summarise(AvgRatings=mean(Ratings)) %>% unite("YearMonth", Year, Month, sep="-"))
d_2016_byMonth <- d_Recent %>% separate(Dates, c("Year", "Month", "Day")) %>% group_by(Year,Month) %>% summarise(AvgRatings=mean(Ratings)) %>% unite("YearMonth", Year, Month, sep="-")
d_2016_byMonth
ggplot(d_2016_byMonth, aes(x=YearMonth, y=Ratings)) + geom_point()
ggplot(d_2016_byMonth, aes(x=YearMonth, y=AVGRatings)) + geom_point()
ggplot(d_2016_byMonth, aes(x=YearMonth, y=AvgRatings)) + geom_point()
d_withQuarters <- CapstoneDF %>% mutate(Quarters = quarters.Date(Dates))
head(d_withQuarters[-1])
d_Recent <- subset(d_withQuarters, d_withQuarters$Dates >= as.Date("20160101", "%Y%m%d"))
dim(d_Recent)
head(d_Recent[-1])
d_2016_byMonth <- d_Recent %>% separate(Dates, c("Year", "Month", "Day")) %>% group_by(Year,Month) %>% summarise(AvgRatings=mean(Ratings)) %>% unite("YearMonth", Year, Month, sep="-")
ggplot(d_2016_byMonth, aes(x=YearMonth, y=AvgRatings)) + geom_point()
d_2016_byQuarter <- d_Recent %>% separate(Dates, c("Year", "Month", "Day")) %>% group_by(Year, Quarters) %>% summarise(AvgRatings=mean(Ratings)) %>% unite("YearQuarter", Year, Quarters, sep="-")
head(d_2016_byQuarter)
ggplot(d_2016_byQuarter, aes(x=YearQuarter, y=AvgRatings)) + geom_point()
